{"C:\\Users\\joevi\\source\\repos\\GaniToJson\\src\\index.ts":{"path":"C:\\Users\\joevi\\source\\repos\\GaniToJson\\src\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":127}},"4":{"start":{"line":5,"column":87},"end":{"line":5,"column":121}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":141}},"6":{"start":{"line":6,"column":94},"end":{"line":6,"column":135}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":73},"end":{"line":5,"column":74}},"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":123}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":80},"end":{"line":6,"column":81}},"loc":{"start":{"line":6,"column":92},"end":{"line":6,"column":137}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"f":{"0":1,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/joevi/source/repos/GaniToJson/src/index.ts","sources":["C:/Users/joevi/source/repos/GaniToJson/src/index.ts"],"names":[],"mappings":";;;AAAA,2CAAmE;AAA1D,2GAAA,aAAa,OAAA;AAAE,kHAAA,oBAAoB,OAAA","sourcesContent":["export { parseGaniFile, parseAndSaveGaniFile } from './GaniToJson';"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4aa635a9602b0476b11490f7ac6b14cc947ba440","contentHash":"f1f094b483f9233e3e49651b3ac4e072febecc25a1e0f64a03caa05cc8054808"},"C:\\Users\\joevi\\source\\repos\\GaniToJson\\src\\GaniToJson.ts":{"path":"C:\\Users\\joevi\\source\\repos\\GaniToJson\\src\\GaniToJson.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":36}},"15":{"start":{"line":14,"column":11},"end":{"line":14,"column":26}},"16":{"start":{"line":15,"column":15},"end":{"line":15,"column":34}},"17":{"start":{"line":16,"column":9},"end":{"line":16,"column":22}},"18":{"start":{"line":17,"column":31},"end":{"line":22,"column":1}},"19":{"start":{"line":23,"column":25},"end":{"line":29,"column":1}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":37}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":33}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":39}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":37}},"25":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"26":{"start":{"line":38,"column":12},"end":{"line":38,"column":59}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":37}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":57}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":33}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":77}},"32":{"start":{"line":48,"column":8},"end":{"line":48,"column":74}},"33":{"start":{"line":49,"column":8},"end":{"line":56,"column":10}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":34}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":55}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":37}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":33}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":39}},"39":{"start":{"line":62,"column":8},"end":{"line":62,"column":61}},"40":{"start":{"line":63,"column":8},"end":{"line":65,"column":11}},"41":{"start":{"line":68,"column":8},"end":{"line":127,"column":11}},"42":{"start":{"line":69,"column":12},"end":{"line":69,"column":39}},"43":{"start":{"line":70,"column":12},"end":{"line":114,"column":15}},"44":{"start":{"line":71,"column":31},"end":{"line":71,"column":54}},"45":{"start":{"line":73,"column":31},"end":{"line":73,"column":92}},"46":{"start":{"line":74,"column":16},"end":{"line":113,"column":17}},"47":{"start":{"line":76,"column":37},"end":{"line":76,"column":69}},"48":{"start":{"line":77,"column":24},"end":{"line":77,"column":74}},"49":{"start":{"line":78,"column":24},"end":{"line":78,"column":30}},"50":{"start":{"line":80,"column":24},"end":{"line":80,"column":93}},"51":{"start":{"line":81,"column":24},"end":{"line":81,"column":30}},"52":{"start":{"line":83,"column":44},"end":{"line":83,"column":66}},"53":{"start":{"line":84,"column":39},"end":{"line":84,"column":55}},"54":{"start":{"line":85,"column":39},"end":{"line":85,"column":55}},"55":{"start":{"line":86,"column":24},"end":{"line":88,"column":25}},"56":{"start":{"line":87,"column":28},"end":{"line":87,"column":76}},"57":{"start":{"line":89,"column":24},"end":{"line":89,"column":90}},"58":{"start":{"line":90,"column":24},"end":{"line":90,"column":30}},"59":{"start":{"line":92,"column":24},"end":{"line":92,"column":75}},"60":{"start":{"line":93,"column":24},"end":{"line":93,"column":30}},"61":{"start":{"line":95,"column":24},"end":{"line":95,"column":81}},"62":{"start":{"line":96,"column":24},"end":{"line":96,"column":30}},"63":{"start":{"line":98,"column":24},"end":{"line":98,"column":52}},"64":{"start":{"line":99,"column":24},"end":{"line":99,"column":30}},"65":{"start":{"line":101,"column":24},"end":{"line":101,"column":48}},"66":{"start":{"line":102,"column":24},"end":{"line":102,"column":30}},"67":{"start":{"line":104,"column":24},"end":{"line":104,"column":54}},"68":{"start":{"line":105,"column":24},"end":{"line":105,"column":49}},"69":{"start":{"line":106,"column":24},"end":{"line":106,"column":30}},"70":{"start":{"line":108,"column":24},"end":{"line":111,"column":25}},"71":{"start":{"line":109,"column":28},"end":{"line":109,"column":60}},"72":{"start":{"line":115,"column":12},"end":{"line":126,"column":15}},"73":{"start":{"line":116,"column":16},"end":{"line":125,"column":19}},"74":{"start":{"line":118,"column":20},"end":{"line":123,"column":21}},"75":{"start":{"line":119,"column":24},"end":{"line":119,"column":67}},"76":{"start":{"line":122,"column":24},"end":{"line":122,"column":52}},"77":{"start":{"line":124,"column":20},"end":{"line":124,"column":52}},"78":{"start":{"line":130,"column":8},"end":{"line":131,"column":117}},"79":{"start":{"line":131,"column":12},"end":{"line":131,"column":117}},"80":{"start":{"line":132,"column":19},"end":{"line":132,"column":59}},"81":{"start":{"line":133,"column":24},"end":{"line":133,"column":55}},"82":{"start":{"line":134,"column":8},"end":{"line":134,"column":108}},"83":{"start":{"line":135,"column":8},"end":{"line":135,"column":94}},"84":{"start":{"line":138,"column":8},"end":{"line":143,"column":11}},"85":{"start":{"line":139,"column":22},"end":{"line":139,"column":40}},"86":{"start":{"line":140,"column":12},"end":{"line":140,"column":52}},"87":{"start":{"line":141,"column":12},"end":{"line":141,"column":30}},"88":{"start":{"line":142,"column":12},"end":{"line":142,"column":21}},"89":{"start":{"line":146,"column":30},"end":{"line":146,"column":50}},"90":{"start":{"line":147,"column":8},"end":{"line":176,"column":9}},"91":{"start":{"line":147,"column":21},"end":{"line":147,"column":22}},"92":{"start":{"line":148,"column":32},"end":{"line":148,"column":34}},"93":{"start":{"line":149,"column":12},"end":{"line":173,"column":13}},"94":{"start":{"line":149,"column":25},"end":{"line":149,"column":26}},"95":{"start":{"line":151,"column":32},"end":{"line":151,"column":72}},"96":{"start":{"line":153,"column":16},"end":{"line":166,"column":17}},"97":{"start":{"line":156,"column":36},"end":{"line":156,"column":75}},"98":{"start":{"line":157,"column":20},"end":{"line":164,"column":21}},"99":{"start":{"line":157,"column":33},"end":{"line":157,"column":34}},"100":{"start":{"line":159,"column":24},"end":{"line":159,"column":73}},"101":{"start":{"line":160,"column":24},"end":{"line":163,"column":25}},"102":{"start":{"line":160,"column":37},"end":{"line":160,"column":38}},"103":{"start":{"line":162,"column":28},"end":{"line":162,"column":72}},"104":{"start":{"line":165,"column":20},"end":{"line":165,"column":73}},"105":{"start":{"line":167,"column":16},"end":{"line":172,"column":17}},"106":{"start":{"line":169,"column":36},"end":{"line":169,"column":75}},"107":{"start":{"line":170,"column":20},"end":{"line":170,"column":69}},"108":{"start":{"line":171,"column":20},"end":{"line":171,"column":71}},"109":{"start":{"line":175,"column":12},"end":{"line":175,"column":64}},"110":{"start":{"line":179,"column":32},"end":{"line":179,"column":52}},"111":{"start":{"line":180,"column":8},"end":{"line":209,"column":9}},"112":{"start":{"line":180,"column":21},"end":{"line":180,"column":22}},"113":{"start":{"line":181,"column":32},"end":{"line":181,"column":34}},"114":{"start":{"line":182,"column":12},"end":{"line":206,"column":13}},"115":{"start":{"line":182,"column":25},"end":{"line":182,"column":26}},"116":{"start":{"line":183,"column":32},"end":{"line":183,"column":72}},"117":{"start":{"line":184,"column":16},"end":{"line":205,"column":17}},"118":{"start":{"line":187,"column":40},"end":{"line":187,"column":79}},"119":{"start":{"line":188,"column":24},"end":{"line":188,"column":73}},"120":{"start":{"line":189,"column":24},"end":{"line":189,"column":75}},"121":{"start":{"line":190,"column":24},"end":{"line":190,"column":30}},"122":{"start":{"line":192,"column":40},"end":{"line":192,"column":79}},"123":{"start":{"line":193,"column":24},"end":{"line":200,"column":25}},"124":{"start":{"line":193,"column":37},"end":{"line":193,"column":38}},"125":{"start":{"line":195,"column":28},"end":{"line":195,"column":77}},"126":{"start":{"line":196,"column":28},"end":{"line":199,"column":29}},"127":{"start":{"line":196,"column":41},"end":{"line":196,"column":42}},"128":{"start":{"line":198,"column":32},"end":{"line":198,"column":76}},"129":{"start":{"line":201,"column":24},"end":{"line":201,"column":59}},"130":{"start":{"line":202,"column":24},"end":{"line":202,"column":30}},"131":{"start":{"line":204,"column":24},"end":{"line":204,"column":71}},"132":{"start":{"line":208,"column":12},"end":{"line":208,"column":64}},"133":{"start":{"line":213,"column":8},"end":{"line":219,"column":9}},"134":{"start":{"line":214,"column":12},"end":{"line":214,"column":34}},"135":{"start":{"line":215,"column":12},"end":{"line":215,"column":59}},"136":{"start":{"line":218,"column":12},"end":{"line":218,"column":65}},"137":{"start":{"line":222,"column":20},"end":{"line":222,"column":38}},"138":{"start":{"line":225,"column":8},"end":{"line":233,"column":9}},"139":{"start":{"line":226,"column":29},"end":{"line":226,"column":31}},"140":{"start":{"line":228,"column":12},"end":{"line":230,"column":13}},"141":{"start":{"line":228,"column":25},"end":{"line":228,"column":26}},"142":{"start":{"line":229,"column":16},"end":{"line":229,"column":42}},"143":{"start":{"line":231,"column":12},"end":{"line":231,"column":44}},"144":{"start":{"line":232,"column":12},"end":{"line":232,"column":38}},"145":{"start":{"line":234,"column":24},"end":{"line":234,"column":32}},"146":{"start":{"line":236,"column":25},"end":{"line":236,"column":66}},"147":{"start":{"line":239,"column":8},"end":{"line":242,"column":9}},"148":{"start":{"line":240,"column":12},"end":{"line":240,"column":51}},"149":{"start":{"line":241,"column":12},"end":{"line":241,"column":59}},"150":{"start":{"line":243,"column":8},"end":{"line":252,"column":10}},"151":{"start":{"line":256,"column":4},"end":{"line":259,"column":7}},"152":{"start":{"line":257,"column":18},"end":{"line":257,"column":76}},"153":{"start":{"line":258,"column":8},"end":{"line":258,"column":32}},"154":{"start":{"line":261,"column":0},"end":{"line":261,"column":52}},"155":{"start":{"line":264,"column":4},"end":{"line":267,"column":7}},"156":{"start":{"line":265,"column":18},"end":{"line":265,"column":58}},"157":{"start":{"line":266,"column":8},"end":{"line":266,"column":25}},"158":{"start":{"line":269,"column":0},"end":{"line":269,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":52},"end":{"line":66,"column":5}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":67,"column":4},"end":{"line":67,"column":5}},"loc":{"start":{"line":67,"column":12},"end":{"line":128,"column":5}},"line":67},"9":{"name":"(anonymous_9)","decl":{"start":{"line":68,"column":47},"end":{"line":68,"column":48}},"loc":{"start":{"line":68,"column":60},"end":{"line":127,"column":9}},"line":68},"10":{"name":"(anonymous_10)","decl":{"start":{"line":70,"column":39},"end":{"line":70,"column":40}},"loc":{"start":{"line":70,"column":49},"end":{"line":114,"column":13}},"line":70},"11":{"name":"(anonymous_11)","decl":{"start":{"line":115,"column":31},"end":{"line":115,"column":32}},"loc":{"start":{"line":115,"column":52},"end":{"line":126,"column":13}},"line":115},"12":{"name":"(anonymous_12)","decl":{"start":{"line":116,"column":44},"end":{"line":116,"column":45}},"loc":{"start":{"line":116,"column":50},"end":{"line":125,"column":17}},"line":116},"13":{"name":"(anonymous_13)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":17},"end":{"line":136,"column":5}},"line":129},"14":{"name":"(anonymous_14)","decl":{"start":{"line":137,"column":4},"end":{"line":137,"column":5}},"loc":{"start":{"line":137,"column":19},"end":{"line":144,"column":5}},"line":137},"15":{"name":"(anonymous_15)","decl":{"start":{"line":138,"column":47},"end":{"line":138,"column":48}},"loc":{"start":{"line":138,"column":60},"end":{"line":143,"column":9}},"line":138},"16":{"name":"(anonymous_16)","decl":{"start":{"line":145,"column":4},"end":{"line":145,"column":5}},"loc":{"start":{"line":145,"column":27},"end":{"line":177,"column":5}},"line":145},"17":{"name":"(anonymous_17)","decl":{"start":{"line":178,"column":4},"end":{"line":178,"column":5}},"loc":{"start":{"line":178,"column":42},"end":{"line":210,"column":5}},"line":178},"18":{"name":"(anonymous_18)","decl":{"start":{"line":211,"column":4},"end":{"line":211,"column":5}},"loc":{"start":{"line":211,"column":31},"end":{"line":220,"column":5}},"line":211},"19":{"name":"(anonymous_19)","decl":{"start":{"line":221,"column":4},"end":{"line":221,"column":5}},"loc":{"start":{"line":221,"column":32},"end":{"line":253,"column":5}},"line":221},"20":{"name":"parseAndSaveGaniFile","decl":{"start":{"line":255,"column":9},"end":{"line":255,"column":29}},"loc":{"start":{"line":255,"column":74},"end":{"line":260,"column":1}},"line":255},"21":{"name":"(anonymous_21)","decl":{"start":{"line":256,"column":43},"end":{"line":256,"column":44}},"loc":{"start":{"line":256,"column":56},"end":{"line":259,"column":5}},"line":256},"22":{"name":"parseGaniFile","decl":{"start":{"line":263,"column":9},"end":{"line":263,"column":22}},"loc":{"start":{"line":263,"column":49},"end":{"line":268,"column":1}},"line":263},"23":{"name":"(anonymous_23)","decl":{"start":{"line":264,"column":43},"end":{"line":264,"column":44}},"loc":{"start":{"line":264,"column":56},"end":{"line":267,"column":5}},"line":264}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},{"start":{"line":37,"column":8},"end":{"line":42,"column":9}}],"line":37},"6":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"7":{"loc":{"start":{"line":74,"column":16},"end":{"line":113,"column":17}},"type":"switch","locations":[{"start":{"line":75,"column":20},"end":{"line":78,"column":30}},{"start":{"line":79,"column":20},"end":{"line":81,"column":30}},{"start":{"line":82,"column":20},"end":{"line":90,"column":30}},{"start":{"line":91,"column":20},"end":{"line":93,"column":30}},{"start":{"line":94,"column":20},"end":{"line":96,"column":30}},{"start":{"line":97,"column":20},"end":{"line":99,"column":30}},{"start":{"line":100,"column":20},"end":{"line":102,"column":30}},{"start":{"line":103,"column":20},"end":{"line":106,"column":30}},{"start":{"line":107,"column":20},"end":{"line":112,"column":25}}],"line":74},"8":{"loc":{"start":{"line":86,"column":24},"end":{"line":88,"column":25}},"type":"if","locations":[{"start":{"line":86,"column":24},"end":{"line":88,"column":25}},{"start":{"line":86,"column":24},"end":{"line":88,"column":25}}],"line":86},"9":{"loc":{"start":{"line":108,"column":24},"end":{"line":111,"column":25}},"type":"if","locations":[{"start":{"line":108,"column":24},"end":{"line":111,"column":25}},{"start":{"line":108,"column":24},"end":{"line":111,"column":25}}],"line":108},"10":{"loc":{"start":{"line":108,"column":28},"end":{"line":108,"column":71}},"type":"binary-expr","locations":[{"start":{"line":108,"column":28},"end":{"line":108,"column":44}},{"start":{"line":108,"column":48},"end":{"line":108,"column":71}}],"line":108},"11":{"loc":{"start":{"line":118,"column":20},"end":{"line":123,"column":21}},"type":"if","locations":[{"start":{"line":118,"column":20},"end":{"line":123,"column":21}},{"start":{"line":118,"column":20},"end":{"line":123,"column":21}}],"line":118},"12":{"loc":{"start":{"line":130,"column":8},"end":{"line":131,"column":117}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":131,"column":117}},{"start":{"line":130,"column":8},"end":{"line":131,"column":117}}],"line":130},"13":{"loc":{"start":{"line":153,"column":16},"end":{"line":166,"column":17}},"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":166,"column":17}},{"start":{"line":153,"column":16},"end":{"line":166,"column":17}}],"line":153},"14":{"loc":{"start":{"line":167,"column":16},"end":{"line":172,"column":17}},"type":"if","locations":[{"start":{"line":167,"column":16},"end":{"line":172,"column":17}},{"start":{"line":167,"column":16},"end":{"line":172,"column":17}}],"line":167},"15":{"loc":{"start":{"line":167,"column":20},"end":{"line":167,"column":67}},"type":"binary-expr","locations":[{"start":{"line":167,"column":20},"end":{"line":167,"column":44}},{"start":{"line":167,"column":48},"end":{"line":167,"column":67}}],"line":167},"16":{"loc":{"start":{"line":184,"column":16},"end":{"line":205,"column":17}},"type":"switch","locations":[{"start":{"line":185,"column":20},"end":{"line":185,"column":37}},{"start":{"line":186,"column":20},"end":{"line":190,"column":30}},{"start":{"line":191,"column":20},"end":{"line":202,"column":30}},{"start":{"line":203,"column":20},"end":{"line":204,"column":71}}],"line":184},"17":{"loc":{"start":{"line":213,"column":8},"end":{"line":219,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":8},"end":{"line":219,"column":9}},{"start":{"line":213,"column":8},"end":{"line":219,"column":9}}],"line":213},"18":{"loc":{"start":{"line":225,"column":8},"end":{"line":233,"column":9}},"type":"if","locations":[{"start":{"line":225,"column":8},"end":{"line":233,"column":9}},{"start":{"line":225,"column":8},"end":{"line":233,"column":9}}],"line":225},"19":{"loc":{"start":{"line":239,"column":8},"end":{"line":242,"column":9}},"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":242,"column":9}},{"start":{"line":239,"column":8},"end":{"line":242,"column":9}}],"line":239}},"s":{"0":1,"1":0,"2":0,"3":2,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":2,"11":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":168,"45":168,"46":168,"47":117,"48":117,"49":117,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":1,"61":1,"62":1,"63":0,"64":0,"65":1,"66":1,"67":1,"68":1,"69":1,"70":47,"71":42,"72":1,"73":1,"74":1,"75":0,"76":1,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":1,"91":1,"92":9,"93":9,"94":9,"95":34,"96":34,"97":32,"98":32,"99":32,"100":160,"101":160,"102":160,"103":480,"104":32,"105":34,"106":2,"107":2,"108":2,"109":9,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":42,"134":8,"135":8,"136":34,"137":117,"138":117,"139":113,"140":113,"141":113,"142":320,"143":113,"144":113,"145":117,"146":117,"147":117,"148":5,"149":5,"150":117,"151":0,"152":0,"153":0,"154":1,"155":1,"156":1,"157":1,"158":1},"f":{"0":2,"1":0,"2":0,"3":2,"4":0,"5":0,"6":2,"7":1,"8":1,"9":1,"10":168,"11":1,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":42,"19":117,"20":0,"21":0,"22":1,"23":1},"b":{"0":[1,1,1],"1":[0,0],"2":[2,2],"3":[2,0],"4":[2,2],"5":[0,1],"6":[1,0],"7":[117,0,0,1,1,0,1,1,47],"8":[0,0],"9":[42,5],"10":[47,42],"11":[0,1],"12":[0,0],"13":[32,2],"14":[2,32],"15":[34,32],"16":[0,0,0,0],"17":[8,34],"18":[113,4],"19":[5,112]},"inputSourceMap":{"version":3,"file":"C:/Users/joevi/source/repos/GaniToJson/src/GaniToJson.ts","sources":["C:/Users/joevi/source/repos/GaniToJson/src/GaniToJson.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from \"console\";\r\n\r\nvar path = require('path');\r\nvar readline = require(\"readline\");\r\nvar fs = require(\"fs\");\r\n\r\nconst INDEX_TO_DIRECTION_MAP = {\r\n    0: \"up\",\r\n    1: \"left\",\r\n    2: \"down\",\r\n    3: \"right\"\r\n}\r\n\r\nconst SPRITE_INDEX_MAP = {\r\n    imageIndex: 0,\r\n    x: 1,\r\n    y: 2,\r\n    w: 3,\r\n    h: 4\r\n}\r\n\r\n\r\ntype SpriteImageLookup = {\r\n    imageIndex: number,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n}\r\n\r\ntype GaniAnimationAttributes = any;\r\ntype GaniSpriteAttributes = any;\r\ntype GaniSpriteData =  Array<number | string>;\r\ntype GaniAnimationFrame = {\r\n    up?: Array<number>,\r\n    down?:  Array<number>,\r\n    left?: Array<number>,\r\n    right?: Array<number>,\r\n    frame?: Array<number>,\r\n    playsound?: Array<number>,\r\n    wait?: Array<number>,\r\n };\r\ntype GaniImage = any;\r\n\r\nexport type GaniJsonData = {\r\n    images: Array<GaniImage>,\r\n    animationAttributes: {[attributeKey: string]: GaniAnimationAttributes },\r\n    spriteAttributes: {[attributeKey: string]: GaniSpriteAttributes},\r\n    sprites: {[spriteId: string]: GaniSpriteData },\r\n    animationFrames: Array<GaniAnimationFrame>\r\n}\r\n\r\nclass GaniToJson {\r\n    private folderPath : string;\r\n    private toFolderPath : string;\r\n    private fileName : string;\r\n    private filePath : string;\r\n    private animationFrames: Array<Array<string | number>>\r\n    private animationIndex : number = 0;\r\n    private singleDirection : boolean = false;\r\n    private inAnimation : boolean = false;\r\n    private finishedAnimation : boolean = false;\r\n    private lineReader : any;\r\n\r\n    readonly jsonObject : GaniJsonData;\r\n    constructor(folderPath, fileName, toFolderPath?) {\r\n        this.folderPath = folderPath;\r\n        if(toFolderPath) {\r\n            this.toFolderPath = path.resolve(toFolderPath);\r\n        } else {\r\n            this.toFolderPath = null;\r\n        }\r\n        if(fileName.includes('.gani')) {\r\n            fileName = fileName.replace(/\\.[^/.]+$/, \"\");\r\n        }\r\n\r\n        this.fileName = fileName;\r\n\r\n        console.log('resolving', this.folderPath, 'and', fileName + '.gani')\r\n        this.filePath = path.resolve(this.folderPath, fileName + \".gani\")\r\n\r\n        this.jsonObject = {\r\n\r\n            // use this to keep track of image names so it's not repeating\r\n            images: [],\r\n            animationAttributes: {},\r\n            spriteAttributes: {},\r\n            sprites:{},\r\n            animationFrames:[],\r\n        };\r\n\r\n        this.animationFrames = [];\r\n        this.animationFrames[this.animationIndex] = [];\r\n        this.singleDirection = false;\r\n        this.inAnimation = false;\r\n        this.finishedAnimation = false;\r\n        console.log('creating interface for', this.filePath);\r\n        this.lineReader = readline.createInterface({\r\n            input: fs.createReadStream(this.filePath)\r\n        });\r\n\r\n    }\r\n\r\n    async parse() : Promise<GaniJsonData> {\r\n      console.log('finna parse')\r\n        this.lineReader.on('line', (line) => {\r\n            var lineType = line.replace(/ .*/,'');\r\n            // get all string after the linetype\r\n            var lineData = (line.slice(line.indexOf(lineType) + lineType.length)).trim();\r\n\r\n            switch(lineType){\r\n                case \"SPRITE\":\r\n                    var sprite = this.getSpriteJsonFromLine(line);\r\n                    this.jsonObject.sprites[sprite.id] = sprite.array;\r\n                    break;\r\n                case \"SETBACKTO\":\r\n                    this.jsonObject.animationAttributes[\"setBackToAnimation\"] = lineData;\r\n                    break;\r\n                case \"ROTATEEFFECT\":\r\n                    var lineDataArray = lineData.split(/[ ]+/);\r\n                    var spriteId = lineDataArray[0];\r\n                    var rotation = lineDataArray[1];\r\n                    if(!(spriteId in this.jsonObject.spriteAttributes)) {\r\n                        this.jsonObject.spriteAttributes[spriteId] = {};\r\n                    }\r\n                    this.jsonObject.spriteAttributes[spriteId][\"rotation\"] = rotation;\r\n                    break;\r\n                case \"LOOP\":\r\n                    this.jsonObject.animationAttributes[\"loop\"] = true;\r\n                    break;\r\n                case \"CONTINUOUS\":\r\n                    this.jsonObject.animationAttributes[\"continuous\"] = true;\r\n                    break;\r\n                case \"SINGLEDIRECTION\":\r\n                    this.singleDirection = true;\r\n                    break;\r\n                case \"ANI\":\r\n                    this.inAnimation = true;\r\n                    break;\r\n                case \"ANIEND\":\r\n                    this.finishedAnimation = true;\r\n                    this.inAnimation = false;\r\n                    break;\r\n                default:\r\n                    if(this.inAnimation && !this.finishedAnimation) {\r\n                        this.compileIntoAnimation(line);\r\n                        //jsonObject.animations[animation.id] = sprite;\r\n                    };\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            this.lineReader.on('close',() => {\r\n                // console.log('the final jsonObject was', jsonObject);\r\n                if(this.singleDirection) {\r\n                    this.parseSingleDirectionAnimationFrames();\r\n                } else {\r\n                    this.parseAnimationFrames();\r\n                }\r\n                return resolve(this.jsonObject);\r\n            });\r\n        });\r\n    }\r\n    \r\n    private saveParsed() {\r\n        if(this.toFolderPath === null) throw new Error(`Must specify folder path to save to as third param in contructor if you want to save.`);\r\n        var json = JSON.stringify(this.jsonObject, null, 2);\r\n        var jsonsmall = JSON.stringify(this.jsonObject);\r\n        fs.writeFileSync(path.join(this.toFolderPath, 'min_'+ this.fileName+'.json'), jsonsmall, 'utf8');\r\n        fs.writeFileSync(path.join(this.toFolderPath, this.fileName+'.json'), json, 'utf8');\r\n    }\r\n\r\n    async parseAndSave() : Promise<GaniJsonData> {\r\n        const d = await this.parse();\r\n        assert(d === this.jsonObject);\r\n        this.saveParsed();\r\n        return d;\r\n    }\r\n\r\n    parseAnimationFrames(){\r\n        var animationFrames = this.animationFrames;\r\n        for(var i = 0; i < animationFrames.length; i++){\r\n            var animationJson = {};\r\n            for(var j = 0; j < animationFrames[i].length; j++){\r\n                //@ts-ignore\r\n                var frameType = animationFrames[i][j].replace(/ .*/,'');\r\n                // if its in the first 3 that means its a frame for a direction\r\n                if(j <= 3) {\r\n                    // split each sprite by commans to put into array\r\n                    //@ts-ignore\r\n                    var tempArray = animationFrames[i][j].trim().split(',');\r\n                    for(var k = 0; k < tempArray.length; k++) {\r\n                        // then split each sprite code and x y +- by commas to keep into array\r\n                        tempArray[k] = tempArray[k].trim().split(/[ ]+/);\r\n                        for (var l = 0; l < tempArray[k].length; l++) {\r\n                            // finally we want these values to integers so parse.\r\n                            tempArray[k][l] = parseInt(tempArray[k][l])\r\n                        }\r\n                    }\r\n                    animationJson[INDEX_TO_DIRECTION_MAP[j]] = tempArray\r\n\r\n                }\r\n                if(frameType == \"PLAYSOUND\" || frameType == \"WAIT\"){\r\n                    //@ts-ignore\r\n                    var tempArray = animationFrames[i][j].trim().split(' ');\r\n                    tempArray = tempArray.slice(1, tempArray.length);\r\n                    animationJson[frameType.toLowerCase()] = tempArray;\r\n                }\r\n            }\r\n            // after looping through the whole frame we can push it to the animation frame array of the json\r\n            this.jsonObject.animationFrames.push(animationJson)\r\n\r\n        }\r\n    }\r\n\r\n    parseSingleDirectionAnimationFrames(){\r\n        const animationFrames = this.animationFrames as any;\r\n        for(var i = 0; i < animationFrames.length; i++){\r\n            var animationJson = {};\r\n            for(var j = 0; j < animationFrames[i].length; j++){\r\n                var frameType = animationFrames[i][j].replace(/ .*/,'');\r\n\r\n                switch(frameType){\r\n                    case \"PLAYSOUND\":\r\n                    case \"WAIT\":\r\n                        var tempArray = animationFrames[i][j].trim().split(' ');\r\n                        tempArray = tempArray.slice(1, tempArray.length);\r\n                        animationJson[frameType.toLowerCase()] = tempArray;\r\n                        break;\r\n                    case \"\":\r\n                        var tempArray = animationFrames[i][j].trim().split(',');\r\n                        for(var k = 0; k < tempArray.length; k++) {\r\n                            // then split each sprite code and x y +- by commas to keep into array\r\n                            tempArray[k] = tempArray[k].trim().split(/[ ]+/);\r\n                            for (var l = 0; l < tempArray[k].length; l++) {\r\n                                // finally we want these values to integers so parse.\r\n                                tempArray[k][l] = parseInt(tempArray[k][l])\r\n                            }\r\n                        }\r\n                        animationJson[\"frame\"] = tempArray;\r\n                        break;\r\n                    default:\r\n                        console.log('unhandled frameType:', frameType)\r\n\r\n                }\r\n            }\r\n            // after looping through the whole frame we can push it to the animation frame array of the json\r\n            this.jsonObject.animationFrames.push(animationJson)\r\n\r\n        }\r\n    }\r\n\r\n    compileIntoAnimation(line){\r\n        // checks to see if theres an enter which indicates new frame\r\n        if(/^\\s*$/.test(line)){\r\n            this.animationIndex++;\r\n            this.animationFrames[this.animationIndex] = [];\r\n        } else {\r\n            this.animationFrames[this.animationIndex].push(line);\r\n        }\r\n    }\r\n\r\n    getSpriteJsonFromLine(line) : { id: string, array: GaniSpriteData } {\r\n        var items = line.split(/[ ]+/);\r\n        // each line should have 8 items, if there's more after 8 that means its because\r\n        // the last item has spaces in it and we need to concat it and make sure the length stays 8\r\n        if(items.length > 8){\r\n            var spriteName = [];\r\n            //iterate through the left\r\n            for(var i = 7; i < items.length; i++){\r\n                spriteName.push(items[i])\r\n            }\r\n            items[7] = spriteName.join(\" \");\r\n            items = items.slice(0, 8);\r\n        }\r\n        var imageName = items[2];\r\n\r\n        // get the current image index\r\n        var imageIndex = this.jsonObject.images.indexOf(imageName);\r\n        // if the image index is not greater than -1 it's not in the image array yet.\r\n        // push it and get the index length - 1\r\n        if(!(imageIndex > -1)) {\r\n            this.jsonObject.images.push(imageName);\r\n            imageIndex = this.jsonObject.images.length - 1;\r\n        }\r\n        return {\r\n            id: items[1],\r\n            array: [\r\n                imageIndex,\r\n                items[3],\r\n                items[4],\r\n                items[5],\r\n                items[6],\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport async function parseAndSaveGaniFile(ganiFolderPath: string, ganiName: string, parsedFolderPath: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson(ganiFolderPath,ganiName,parsedFolderPath);\r\n    return f.parseAndSave();\r\n};\r\n\r\n\r\nexport async function parseGaniFile(ganiFolderPath: string, ganiName: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson(ganiFolderPath,ganiName);\r\n    return f.parse();\r\n};\r\n\r\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5257091c3e6436460c5269e39eb271bc7ea88f0c","contentHash":"036b0a4d1a12d93b239f5f810f8a0768fb2a0c51fa8130b9d986ce3db596b1ff"}}