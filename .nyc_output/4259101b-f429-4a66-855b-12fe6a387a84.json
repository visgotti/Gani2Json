{"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\index.ts":{"path":"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":78}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":127}},"4":{"start":{"line":5,"column":87},"end":{"line":5,"column":121}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":141}},"6":{"start":{"line":6,"column":94},"end":{"line":6,"column":135}},"7":{"start":{"line":7,"column":0},"end":{"line":7,"column":111}},"8":{"start":{"line":7,"column":79},"end":{"line":7,"column":105}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":73},"end":{"line":5,"column":74}},"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":123}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":80},"end":{"line":6,"column":81}},"loc":{"start":{"line":6,"column":92},"end":{"line":6,"column":137}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":7,"column":65},"end":{"line":7,"column":66}},"loc":{"start":{"line":7,"column":77},"end":{"line":7,"column":107}},"line":7}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1,"8":1},"f":{"0":1,"1":0,"2":1},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/joevi/source/repos/Gani2Json/src/index.ts","sources":["C:/Users/joevi/source/repos/Gani2Json/src/index.ts"],"names":[],"mappings":";;;AAAA,2CAA0E;AAAjE,2GAAA,aAAa,OAAA;AAAE,kHAAA,oBAAoB,OAAA;AAAE,mGAAA,KAAK,OAAA","sourcesContent":["export { parseGaniFile, parseAndSaveGaniFile, parse } from './GaniToJson';"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e8a2bf2f4e452b372adce9d93457d59d9470e48e","contentHash":"ee167e0081f851bf1bb39fbee0fb0880a0e1a6288a18a377166757182928c1aa"},"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\GaniToJson.ts":{"path":"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\GaniToJson.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":78}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":36}},"15":{"start":{"line":14,"column":11},"end":{"line":14,"column":26}},"16":{"start":{"line":15,"column":15},"end":{"line":15,"column":34}},"17":{"start":{"line":16,"column":9},"end":{"line":16,"column":22}},"18":{"start":{"line":17,"column":31},"end":{"line":22,"column":1}},"19":{"start":{"line":23,"column":25},"end":{"line":29,"column":1}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":37}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":33}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":39}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":37}},"25":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"26":{"start":{"line":38,"column":12},"end":{"line":38,"column":59}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":37}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":57}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":33}},"31":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"32":{"start":{"line":48,"column":12},"end":{"line":48,"column":78}},"33":{"start":{"line":50,"column":8},"end":{"line":57,"column":10}},"34":{"start":{"line":58,"column":8},"end":{"line":58,"column":34}},"35":{"start":{"line":59,"column":8},"end":{"line":59,"column":55}},"36":{"start":{"line":60,"column":8},"end":{"line":60,"column":37}},"37":{"start":{"line":61,"column":8},"end":{"line":61,"column":33}},"38":{"start":{"line":62,"column":8},"end":{"line":62,"column":39}},"39":{"start":{"line":65,"column":25},"end":{"line":65,"column":55}},"40":{"start":{"line":67,"column":25},"end":{"line":67,"column":86}},"41":{"start":{"line":68,"column":8},"end":{"line":125,"column":9}},"42":{"start":{"line":70,"column":29},"end":{"line":70,"column":61}},"43":{"start":{"line":71,"column":16},"end":{"line":71,"column":66}},"44":{"start":{"line":72,"column":16},"end":{"line":72,"column":22}},"45":{"start":{"line":74,"column":16},"end":{"line":74,"column":73}},"46":{"start":{"line":75,"column":16},"end":{"line":75,"column":22}},"47":{"start":{"line":77,"column":36},"end":{"line":77,"column":58}},"48":{"start":{"line":78,"column":31},"end":{"line":78,"column":47}},"49":{"start":{"line":79,"column":30},"end":{"line":79,"column":46}},"50":{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},"51":{"start":{"line":81,"column":20},"end":{"line":81,"column":68}},"52":{"start":{"line":83,"column":16},"end":{"line":83,"column":88}},"53":{"start":{"line":84,"column":16},"end":{"line":84,"column":22}},"54":{"start":{"line":86,"column":36},"end":{"line":86,"column":58}},"55":{"start":{"line":87,"column":31},"end":{"line":87,"column":47}},"56":{"start":{"line":88,"column":30},"end":{"line":88,"column":46}},"57":{"start":{"line":89,"column":16},"end":{"line":91,"column":17}},"58":{"start":{"line":90,"column":20},"end":{"line":90,"column":68}},"59":{"start":{"line":92,"column":16},"end":{"line":92,"column":88}},"60":{"start":{"line":93,"column":16},"end":{"line":93,"column":22}},"61":{"start":{"line":95,"column":36},"end":{"line":95,"column":58}},"62":{"start":{"line":96,"column":31},"end":{"line":96,"column":47}},"63":{"start":{"line":97,"column":31},"end":{"line":97,"column":47}},"64":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"65":{"start":{"line":99,"column":20},"end":{"line":99,"column":68}},"66":{"start":{"line":101,"column":16},"end":{"line":101,"column":89}},"67":{"start":{"line":102,"column":16},"end":{"line":102,"column":22}},"68":{"start":{"line":104,"column":16},"end":{"line":104,"column":64}},"69":{"start":{"line":105,"column":16},"end":{"line":105,"column":22}},"70":{"start":{"line":107,"column":16},"end":{"line":107,"column":70}},"71":{"start":{"line":108,"column":16},"end":{"line":108,"column":22}},"72":{"start":{"line":110,"column":16},"end":{"line":110,"column":44}},"73":{"start":{"line":111,"column":16},"end":{"line":111,"column":22}},"74":{"start":{"line":113,"column":16},"end":{"line":113,"column":40}},"75":{"start":{"line":114,"column":16},"end":{"line":114,"column":22}},"76":{"start":{"line":116,"column":16},"end":{"line":116,"column":46}},"77":{"start":{"line":117,"column":16},"end":{"line":117,"column":41}},"78":{"start":{"line":118,"column":16},"end":{"line":118,"column":22}},"79":{"start":{"line":120,"column":16},"end":{"line":123,"column":17}},"80":{"start":{"line":121,"column":20},"end":{"line":121,"column":52}},"81":{"start":{"line":128,"column":22},"end":{"line":128,"column":46}},"82":{"start":{"line":129,"column":8},"end":{"line":131,"column":9}},"83":{"start":{"line":129,"column":21},"end":{"line":129,"column":22}},"84":{"start":{"line":130,"column":12},"end":{"line":130,"column":37}},"85":{"start":{"line":132,"column":8},"end":{"line":137,"column":9}},"86":{"start":{"line":133,"column":12},"end":{"line":133,"column":55}},"87":{"start":{"line":136,"column":12},"end":{"line":136,"column":40}},"88":{"start":{"line":138,"column":8},"end":{"line":138,"column":31}},"89":{"start":{"line":141,"column":8},"end":{"line":163,"column":11}},"90":{"start":{"line":142,"column":12},"end":{"line":143,"column":63}},"91":{"start":{"line":143,"column":16},"end":{"line":143,"column":63}},"92":{"start":{"line":144,"column":12},"end":{"line":146,"column":15}},"93":{"start":{"line":147,"column":24},"end":{"line":147,"column":25}},"94":{"start":{"line":148,"column":12},"end":{"line":151,"column":15}},"95":{"start":{"line":149,"column":16},"end":{"line":149,"column":37}},"96":{"start":{"line":150,"column":16},"end":{"line":150,"column":24}},"97":{"start":{"line":152,"column":12},"end":{"line":162,"column":15}},"98":{"start":{"line":153,"column":16},"end":{"line":161,"column":19}},"99":{"start":{"line":154,"column":20},"end":{"line":159,"column":21}},"100":{"start":{"line":155,"column":24},"end":{"line":155,"column":67}},"101":{"start":{"line":158,"column":24},"end":{"line":158,"column":52}},"102":{"start":{"line":160,"column":20},"end":{"line":160,"column":52}},"103":{"start":{"line":166,"column":8},"end":{"line":167,"column":117}},"104":{"start":{"line":167,"column":12},"end":{"line":167,"column":117}},"105":{"start":{"line":168,"column":19},"end":{"line":168,"column":59}},"106":{"start":{"line":169,"column":24},"end":{"line":169,"column":55}},"107":{"start":{"line":170,"column":8},"end":{"line":170,"column":108}},"108":{"start":{"line":171,"column":8},"end":{"line":171,"column":94}},"109":{"start":{"line":174,"column":8},"end":{"line":179,"column":11}},"110":{"start":{"line":175,"column":22},"end":{"line":175,"column":40}},"111":{"start":{"line":176,"column":12},"end":{"line":176,"column":57}},"112":{"start":{"line":177,"column":12},"end":{"line":177,"column":30}},"113":{"start":{"line":178,"column":12},"end":{"line":178,"column":21}},"114":{"start":{"line":183,"column":32},"end":{"line":183,"column":52}},"115":{"start":{"line":184,"column":8},"end":{"line":216,"column":9}},"116":{"start":{"line":184,"column":21},"end":{"line":184,"column":22}},"117":{"start":{"line":185,"column":39},"end":{"line":185,"column":41}},"118":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"119":{"start":{"line":187,"column":16},"end":{"line":187,"column":25}},"120":{"start":{"line":189,"column":12},"end":{"line":213,"column":13}},"121":{"start":{"line":189,"column":25},"end":{"line":189,"column":26}},"122":{"start":{"line":191,"column":34},"end":{"line":191,"column":81}},"123":{"start":{"line":193,"column":16},"end":{"line":206,"column":17}},"124":{"start":{"line":196,"column":38},"end":{"line":196,"column":77}},"125":{"start":{"line":197,"column":20},"end":{"line":204,"column":21}},"126":{"start":{"line":197,"column":33},"end":{"line":197,"column":34}},"127":{"start":{"line":199,"column":24},"end":{"line":199,"column":73}},"128":{"start":{"line":200,"column":24},"end":{"line":203,"column":25}},"129":{"start":{"line":200,"column":37},"end":{"line":200,"column":38}},"130":{"start":{"line":202,"column":28},"end":{"line":202,"column":74}},"131":{"start":{"line":205,"column":20},"end":{"line":205,"column":78}},"132":{"start":{"line":207,"column":16},"end":{"line":212,"column":17}},"133":{"start":{"line":208,"column":20},"end":{"line":208,"column":87}},"134":{"start":{"line":210,"column":21},"end":{"line":212,"column":17}},"135":{"start":{"line":211,"column":20},"end":{"line":211,"column":82}},"136":{"start":{"line":215,"column":12},"end":{"line":215,"column":69}},"137":{"start":{"line":219,"column":30},"end":{"line":219,"column":57}},"138":{"start":{"line":220,"column":8},"end":{"line":220,"column":55}},"139":{"start":{"line":223,"column":34},"end":{"line":223,"column":61}},"140":{"start":{"line":224,"column":8},"end":{"line":226,"column":9}},"141":{"start":{"line":225,"column":12},"end":{"line":225,"column":43}},"142":{"start":{"line":227,"column":8},"end":{"line":231,"column":11}},"143":{"start":{"line":234,"column":32},"end":{"line":234,"column":52}},"144":{"start":{"line":235,"column":8},"end":{"line":264,"column":9}},"145":{"start":{"line":235,"column":21},"end":{"line":235,"column":22}},"146":{"start":{"line":236,"column":39},"end":{"line":236,"column":41}},"147":{"start":{"line":237,"column":12},"end":{"line":261,"column":13}},"148":{"start":{"line":237,"column":25},"end":{"line":237,"column":26}},"149":{"start":{"line":238,"column":34},"end":{"line":238,"column":74}},"150":{"start":{"line":239,"column":16},"end":{"line":260,"column":17}},"151":{"start":{"line":241,"column":24},"end":{"line":241,"column":91}},"152":{"start":{"line":242,"column":24},"end":{"line":242,"column":30}},"153":{"start":{"line":244,"column":24},"end":{"line":244,"column":86}},"154":{"start":{"line":245,"column":24},"end":{"line":245,"column":30}},"155":{"start":{"line":247,"column":42},"end":{"line":247,"column":81}},"156":{"start":{"line":248,"column":24},"end":{"line":255,"column":25}},"157":{"start":{"line":248,"column":37},"end":{"line":248,"column":38}},"158":{"start":{"line":250,"column":28},"end":{"line":250,"column":77}},"159":{"start":{"line":251,"column":28},"end":{"line":254,"column":29}},"160":{"start":{"line":251,"column":41},"end":{"line":251,"column":42}},"161":{"start":{"line":253,"column":32},"end":{"line":253,"column":76}},"162":{"start":{"line":256,"column":24},"end":{"line":256,"column":64}},"163":{"start":{"line":257,"column":24},"end":{"line":257,"column":30}},"164":{"start":{"line":259,"column":24},"end":{"line":259,"column":71}},"165":{"start":{"line":263,"column":12},"end":{"line":263,"column":69}},"166":{"start":{"line":268,"column":8},"end":{"line":274,"column":9}},"167":{"start":{"line":269,"column":12},"end":{"line":269,"column":34}},"168":{"start":{"line":270,"column":12},"end":{"line":270,"column":59}},"169":{"start":{"line":273,"column":12},"end":{"line":273,"column":65}},"170":{"start":{"line":277,"column":20},"end":{"line":277,"column":38}},"171":{"start":{"line":280,"column":8},"end":{"line":288,"column":9}},"172":{"start":{"line":281,"column":31},"end":{"line":281,"column":33}},"173":{"start":{"line":283,"column":12},"end":{"line":285,"column":13}},"174":{"start":{"line":283,"column":25},"end":{"line":283,"column":26}},"175":{"start":{"line":284,"column":16},"end":{"line":284,"column":42}},"176":{"start":{"line":286,"column":12},"end":{"line":286,"column":44}},"177":{"start":{"line":287,"column":12},"end":{"line":287,"column":38}},"178":{"start":{"line":289,"column":26},"end":{"line":289,"column":34}},"179":{"start":{"line":291,"column":25},"end":{"line":291,"column":66}},"180":{"start":{"line":294,"column":8},"end":{"line":297,"column":9}},"181":{"start":{"line":295,"column":12},"end":{"line":295,"column":51}},"182":{"start":{"line":296,"column":12},"end":{"line":296,"column":59}},"183":{"start":{"line":298,"column":8},"end":{"line":307,"column":10}},"184":{"start":{"line":311,"column":4},"end":{"line":314,"column":7}},"185":{"start":{"line":312,"column":18},"end":{"line":312,"column":76}},"186":{"start":{"line":313,"column":8},"end":{"line":313,"column":32}},"187":{"start":{"line":316,"column":0},"end":{"line":316,"column":52}},"188":{"start":{"line":319,"column":4},"end":{"line":322,"column":7}},"189":{"start":{"line":320,"column":18},"end":{"line":320,"column":34}},"190":{"start":{"line":321,"column":8},"end":{"line":321,"column":48}},"191":{"start":{"line":324,"column":0},"end":{"line":324,"column":38}},"192":{"start":{"line":327,"column":4},"end":{"line":330,"column":7}},"193":{"start":{"line":328,"column":18},"end":{"line":328,"column":75}},"194":{"start":{"line":329,"column":8},"end":{"line":329,"column":62}},"195":{"start":{"line":332,"column":0},"end":{"line":332,"column":22}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":52},"end":{"line":63,"column":5}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":64,"column":4},"end":{"line":64,"column":5}},"loc":{"start":{"line":64,"column":20},"end":{"line":126,"column":5}},"line":64},"9":{"name":"(anonymous_9)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":32},"end":{"line":139,"column":5}},"line":127},"10":{"name":"(anonymous_10)","decl":{"start":{"line":140,"column":4},"end":{"line":140,"column":5}},"loc":{"start":{"line":140,"column":12},"end":{"line":164,"column":5}},"line":140},"11":{"name":"(anonymous_11)","decl":{"start":{"line":141,"column":47},"end":{"line":141,"column":48}},"loc":{"start":{"line":141,"column":60},"end":{"line":163,"column":9}},"line":141},"12":{"name":"(anonymous_12)","decl":{"start":{"line":148,"column":39},"end":{"line":148,"column":40}},"loc":{"start":{"line":148,"column":49},"end":{"line":151,"column":13}},"line":148},"13":{"name":"(anonymous_13)","decl":{"start":{"line":152,"column":31},"end":{"line":152,"column":32}},"loc":{"start":{"line":152,"column":52},"end":{"line":162,"column":13}},"line":152},"14":{"name":"(anonymous_14)","decl":{"start":{"line":153,"column":44},"end":{"line":153,"column":45}},"loc":{"start":{"line":153,"column":50},"end":{"line":161,"column":17}},"line":153},"15":{"name":"(anonymous_15)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":17},"end":{"line":172,"column":5}},"line":165},"16":{"name":"(anonymous_16)","decl":{"start":{"line":173,"column":4},"end":{"line":173,"column":5}},"loc":{"start":{"line":173,"column":19},"end":{"line":180,"column":5}},"line":173},"17":{"name":"(anonymous_17)","decl":{"start":{"line":174,"column":47},"end":{"line":174,"column":48}},"loc":{"start":{"line":174,"column":60},"end":{"line":179,"column":9}},"line":174},"18":{"name":"(anonymous_18)","decl":{"start":{"line":181,"column":4},"end":{"line":181,"column":5}},"loc":{"start":{"line":181,"column":27},"end":{"line":217,"column":5}},"line":181},"19":{"name":"(anonymous_19)","decl":{"start":{"line":218,"column":4},"end":{"line":218,"column":5}},"loc":{"start":{"line":218,"column":44},"end":{"line":221,"column":5}},"line":218},"20":{"name":"(anonymous_20)","decl":{"start":{"line":222,"column":4},"end":{"line":222,"column":5}},"loc":{"start":{"line":222,"column":49},"end":{"line":232,"column":5}},"line":222},"21":{"name":"(anonymous_21)","decl":{"start":{"line":233,"column":4},"end":{"line":233,"column":5}},"loc":{"start":{"line":233,"column":42},"end":{"line":265,"column":5}},"line":233},"22":{"name":"(anonymous_22)","decl":{"start":{"line":266,"column":4},"end":{"line":266,"column":5}},"loc":{"start":{"line":266,"column":31},"end":{"line":275,"column":5}},"line":266},"23":{"name":"(anonymous_23)","decl":{"start":{"line":276,"column":4},"end":{"line":276,"column":5}},"loc":{"start":{"line":276,"column":32},"end":{"line":308,"column":5}},"line":276},"24":{"name":"parseAndSaveGaniFile","decl":{"start":{"line":310,"column":9},"end":{"line":310,"column":29}},"loc":{"start":{"line":310,"column":74},"end":{"line":315,"column":1}},"line":310},"25":{"name":"(anonymous_25)","decl":{"start":{"line":311,"column":43},"end":{"line":311,"column":44}},"loc":{"start":{"line":311,"column":56},"end":{"line":314,"column":5}},"line":311},"26":{"name":"parseGaniFile","decl":{"start":{"line":318,"column":9},"end":{"line":318,"column":22}},"loc":{"start":{"line":318,"column":40},"end":{"line":323,"column":1}},"line":318},"27":{"name":"(anonymous_27)","decl":{"start":{"line":319,"column":43},"end":{"line":319,"column":44}},"loc":{"start":{"line":319,"column":56},"end":{"line":322,"column":5}},"line":319},"28":{"name":"parse","decl":{"start":{"line":326,"column":9},"end":{"line":326,"column":14}},"loc":{"start":{"line":326,"column":58},"end":{"line":331,"column":1}},"line":326},"29":{"name":"(anonymous_29)","decl":{"start":{"line":327,"column":43},"end":{"line":327,"column":44}},"loc":{"start":{"line":327,"column":56},"end":{"line":330,"column":5}},"line":327}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},{"start":{"line":37,"column":8},"end":{"line":42,"column":9}}],"line":37},"6":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"7":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":50}},"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":20}},{"start":{"line":43,"column":24},"end":{"line":43,"column":50}}],"line":43},"8":{"loc":{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},"type":"if","locations":[{"start":{"line":47,"column":8},"end":{"line":49,"column":9}},{"start":{"line":47,"column":8},"end":{"line":49,"column":9}}],"line":47},"9":{"loc":{"start":{"line":47,"column":12},"end":{"line":47,"column":39}},"type":"binary-expr","locations":[{"start":{"line":47,"column":12},"end":{"line":47,"column":27}},{"start":{"line":47,"column":31},"end":{"line":47,"column":39}}],"line":47},"10":{"loc":{"start":{"line":68,"column":8},"end":{"line":125,"column":9}},"type":"switch","locations":[{"start":{"line":69,"column":12},"end":{"line":72,"column":22}},{"start":{"line":73,"column":12},"end":{"line":75,"column":22}},{"start":{"line":76,"column":12},"end":{"line":84,"column":22}},{"start":{"line":85,"column":12},"end":{"line":93,"column":22}},{"start":{"line":94,"column":12},"end":{"line":102,"column":22}},{"start":{"line":103,"column":12},"end":{"line":105,"column":22}},{"start":{"line":106,"column":12},"end":{"line":108,"column":22}},{"start":{"line":109,"column":12},"end":{"line":111,"column":22}},{"start":{"line":112,"column":12},"end":{"line":114,"column":22}},{"start":{"line":115,"column":12},"end":{"line":118,"column":22}},{"start":{"line":119,"column":12},"end":{"line":124,"column":17}}],"line":68},"11":{"loc":{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":82,"column":17}},{"start":{"line":80,"column":16},"end":{"line":82,"column":17}}],"line":80},"12":{"loc":{"start":{"line":89,"column":16},"end":{"line":91,"column":17}},"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":91,"column":17}},{"start":{"line":89,"column":16},"end":{"line":91,"column":17}}],"line":89},"13":{"loc":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},{"start":{"line":98,"column":16},"end":{"line":100,"column":17}}],"line":98},"14":{"loc":{"start":{"line":120,"column":16},"end":{"line":123,"column":17}},"type":"if","locations":[{"start":{"line":120,"column":16},"end":{"line":123,"column":17}},{"start":{"line":120,"column":16},"end":{"line":123,"column":17}}],"line":120},"15":{"loc":{"start":{"line":120,"column":20},"end":{"line":120,"column":63}},"type":"binary-expr","locations":[{"start":{"line":120,"column":20},"end":{"line":120,"column":36}},{"start":{"line":120,"column":40},"end":{"line":120,"column":63}}],"line":120},"16":{"loc":{"start":{"line":132,"column":8},"end":{"line":137,"column":9}},"type":"if","locations":[{"start":{"line":132,"column":8},"end":{"line":137,"column":9}},{"start":{"line":132,"column":8},"end":{"line":137,"column":9}}],"line":132},"17":{"loc":{"start":{"line":142,"column":12},"end":{"line":143,"column":63}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":143,"column":63}},{"start":{"line":142,"column":12},"end":{"line":143,"column":63}}],"line":142},"18":{"loc":{"start":{"line":154,"column":20},"end":{"line":159,"column":21}},"type":"if","locations":[{"start":{"line":154,"column":20},"end":{"line":159,"column":21}},{"start":{"line":154,"column":20},"end":{"line":159,"column":21}}],"line":154},"19":{"loc":{"start":{"line":166,"column":8},"end":{"line":167,"column":117}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":167,"column":117}},{"start":{"line":166,"column":8},"end":{"line":167,"column":117}}],"line":166},"20":{"loc":{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},"type":"if","locations":[{"start":{"line":186,"column":12},"end":{"line":188,"column":13}},{"start":{"line":186,"column":12},"end":{"line":188,"column":13}}],"line":186},"21":{"loc":{"start":{"line":186,"column":18},"end":{"line":186,"column":90}},"type":"cond-expr","locations":[{"start":{"line":186,"column":72},"end":{"line":186,"column":78}},{"start":{"line":186,"column":81},"end":{"line":186,"column":90}}],"line":186},"22":{"loc":{"start":{"line":186,"column":18},"end":{"line":186,"column":69}},"type":"binary-expr","locations":[{"start":{"line":186,"column":18},"end":{"line":186,"column":52}},{"start":{"line":186,"column":56},"end":{"line":186,"column":69}}],"line":186},"23":{"loc":{"start":{"line":193,"column":16},"end":{"line":206,"column":17}},"type":"if","locations":[{"start":{"line":193,"column":16},"end":{"line":206,"column":17}},{"start":{"line":193,"column":16},"end":{"line":206,"column":17}}],"line":193},"24":{"loc":{"start":{"line":207,"column":16},"end":{"line":212,"column":17}},"type":"if","locations":[{"start":{"line":207,"column":16},"end":{"line":212,"column":17}},{"start":{"line":207,"column":16},"end":{"line":212,"column":17}}],"line":207},"25":{"loc":{"start":{"line":210,"column":21},"end":{"line":212,"column":17}},"type":"if","locations":[{"start":{"line":210,"column":21},"end":{"line":212,"column":17}},{"start":{"line":210,"column":21},"end":{"line":212,"column":17}}],"line":210},"26":{"loc":{"start":{"line":224,"column":8},"end":{"line":226,"column":9}},"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":226,"column":9}},{"start":{"line":224,"column":8},"end":{"line":226,"column":9}}],"line":224},"27":{"loc":{"start":{"line":239,"column":16},"end":{"line":260,"column":17}},"type":"switch","locations":[{"start":{"line":240,"column":20},"end":{"line":242,"column":30}},{"start":{"line":243,"column":20},"end":{"line":245,"column":30}},{"start":{"line":246,"column":20},"end":{"line":257,"column":30}},{"start":{"line":258,"column":20},"end":{"line":259,"column":71}}],"line":239},"28":{"loc":{"start":{"line":268,"column":8},"end":{"line":274,"column":9}},"type":"if","locations":[{"start":{"line":268,"column":8},"end":{"line":274,"column":9}},{"start":{"line":268,"column":8},"end":{"line":274,"column":9}}],"line":268},"29":{"loc":{"start":{"line":280,"column":8},"end":{"line":288,"column":9}},"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":288,"column":9}},{"start":{"line":280,"column":8},"end":{"line":288,"column":9}}],"line":280},"30":{"loc":{"start":{"line":294,"column":8},"end":{"line":297,"column":9}},"type":"if","locations":[{"start":{"line":294,"column":8},"end":{"line":297,"column":9}},{"start":{"line":294,"column":8},"end":{"line":297,"column":9}}],"line":294},"31":{"loc":{"start":{"line":329,"column":15},"end":{"line":329,"column":61}},"type":"cond-expr","locations":[{"start":{"line":329,"column":33},"end":{"line":329,"column":49}},{"start":{"line":329,"column":52},"end":{"line":329,"column":61}}],"line":329}},"s":{"0":1,"1":1,"2":0,"3":4,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":5,"11":4,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":2,"21":2,"22":2,"23":2,"24":2,"25":2,"26":1,"27":1,"28":2,"29":1,"30":2,"31":2,"32":1,"33":2,"34":2,"35":2,"36":2,"37":2,"38":2,"39":337,"40":337,"41":337,"42":234,"43":234,"44":234,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":2,"69":2,"70":2,"71":2,"72":0,"73":0,"74":2,"75":2,"76":2,"77":2,"78":2,"79":95,"80":84,"81":1,"82":1,"83":1,"84":169,"85":1,"86":0,"87":1,"88":1,"89":1,"90":1,"91":0,"92":1,"93":1,"94":1,"95":168,"96":168,"97":1,"98":1,"99":1,"100":0,"101":1,"102":1,"103":1,"104":0,"105":1,"106":1,"107":1,"108":1,"109":1,"110":1,"111":1,"112":1,"113":1,"114":2,"115":2,"116":2,"117":18,"118":18,"119":2,"120":16,"121":16,"122":68,"123":68,"124":64,"125":64,"126":64,"127":320,"128":320,"129":320,"130":960,"131":64,"132":68,"133":4,"134":64,"135":0,"136":16,"137":0,"138":0,"139":4,"140":4,"141":4,"142":4,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":84,"167":16,"168":16,"169":68,"170":234,"171":234,"172":226,"173":226,"174":226,"175":640,"176":226,"177":226,"178":234,"179":234,"180":234,"181":10,"182":10,"183":234,"184":0,"185":0,"186":0,"187":1,"188":1,"189":1,"190":1,"191":1,"192":1,"193":1,"194":1,"195":1},"f":{"0":4,"1":1,"2":0,"3":4,"4":1,"5":0,"6":5,"7":2,"8":337,"9":1,"10":1,"11":1,"12":168,"13":1,"14":1,"15":1,"16":1,"17":1,"18":2,"19":0,"20":4,"21":0,"22":84,"23":234,"24":0,"25":0,"26":1,"27":1,"28":1,"29":1},"b":{"0":[1,1,1],"1":[1,0],"2":[4,4],"3":[4,1],"4":[4,4],"5":[1,1],"6":[1,1],"7":[2,1],"8":[1,1],"9":[2,1],"10":[234,0,0,0,0,2,2,0,2,2,95],"11":[0,0],"12":[0,0],"13":[0,0],"14":[84,11],"15":[95,84],"16":[0,1],"17":[0,1],"18":[0,1],"19":[0,1],"20":[2,16],"21":[0,18],"22":[18,18],"23":[64,4],"24":[4,64],"25":[0,64],"26":[4,0],"27":[0,0,0,0],"28":[16,68],"29":[226,8],"30":[10,224],"31":[1,0]},"inputSourceMap":{"version":3,"file":"C:/Users/joevi/source/repos/Gani2Json/src/GaniToJson.ts","sources":["C:/Users/joevi/source/repos/Gani2Json/src/GaniToJson.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from \"console\";\r\n\r\nvar path = require('path');\r\nvar readline = require(\"readline\");\r\nvar fs = require(\"fs\");\r\n\r\nconst INDEX_TO_DIRECTION_MAP = {\r\n    0: \"up\",\r\n    1: \"left\",\r\n    2: \"down\",\r\n    3: \"right\"\r\n}\r\n\r\nconst SPRITE_INDEX_MAP = {\r\n    imageIndex: 0,\r\n    x: 1,\r\n    y: 2,\r\n    w: 3,\r\n    h: 4\r\n}\r\n\r\n\r\ntype SpriteImageLookup = {\r\n    imageIndex: number,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n}\r\n\r\ntype GaniAnimationAttributes = {\r\n    continuous?: boolean,\r\n    loop?: boolean,\r\n    setBackTo?: string,\r\n};\r\ntype GaniSpriteAttributes = {\r\n    stretchX?: number,\r\n    stretchY?: number,\r\n    rotation?: number,\r\n};\r\ntype GaniSpriteData =  Array<number | string>;\r\ntype GaniAnimationFrame = {\r\n    up?: Array<number>,\r\n    down?:  Array<number>,\r\n    left?: Array<number>,\r\n    right?: Array<number>,\r\n    frame?: Array<number>,\r\n    sounds?: Array<{\r\n        name: string,\r\n        time?: number,\r\n        volume?: number\r\n    }>,\r\n    wait?: number,\r\n };\r\ntype GaniImage = any;\r\n\r\nexport type GaniJsonData = {\r\n    images: Array<GaniImage>,\r\n    animationAttributes: GaniAnimationAttributes,\r\n    spriteAttributes:  {[spriteId: string]: GaniSpriteAttributes},\r\n    sprites: {[spriteId: string]: GaniSpriteData },\r\n    animationFrames: Array<GaniAnimationFrame>\r\n}\r\n\r\nclass GaniToJson {\r\n    private folderPath : string;\r\n    private toFolderPath : string;\r\n    private fileName : string;\r\n    private filePath : string;\r\n    private animationFrames: Array<Array<string | number>>\r\n    private animationIndex : number = 0;\r\n    private singleDirection : boolean = false;\r\n    private inAnimation : boolean = false;\r\n    private finishedAnimation : boolean = false;\r\n    private lineReader : any;\r\n\r\n    readonly jsonObject : GaniJsonData;\r\n    constructor(folderPath?, fileName?, toFolderPath?) {\r\n        this.folderPath = folderPath;\r\n        if(toFolderPath) {\r\n            this.toFolderPath = path.resolve(toFolderPath);\r\n        } else {\r\n            this.toFolderPath = null;\r\n        }\r\n        if(fileName && fileName.includes('.gani')) {\r\n            fileName = fileName.replace(/\\.[^/.]+$/, \"\");\r\n        }\r\n\r\n        this.fileName = fileName;\r\n        if(this.folderPath && fileName) {\r\n            this.filePath = path.resolve(this.folderPath, fileName + \".gani\")\r\n        }\r\n\r\n        this.jsonObject = {\r\n            // use this to keep track of image names so it's not repeating\r\n            images: [],\r\n            animationAttributes: {},\r\n            spriteAttributes: {},\r\n            sprites:{},\r\n            animationFrames:[],\r\n        };\r\n\r\n        this.animationFrames = [];\r\n        this.animationFrames[this.animationIndex] = [];\r\n        this.singleDirection = false;\r\n        this.inAnimation = false;\r\n        this.finishedAnimation = false;\r\n    }\r\n\r\n    parseLine(line: string) {\r\n        const lineType = line.replace(/ .*/,'').trim();\r\n\r\n        // get all string after the linetype\r\n        const lineData = (line.slice(line.indexOf(lineType) + lineType.length)).trim();\r\n\r\n        switch(lineType){\r\n            case \"SPRITE\":\r\n                var sprite = this.getSpriteJsonFromLine(line);\r\n                this.jsonObject.sprites[sprite.id] = sprite.array;\r\n                break;\r\n            case \"SETBACKTO\":\r\n                this.jsonObject.animationAttributes.setBackTo = lineData;\r\n                break;\r\n            case 'STRETCHXEFFECT':\r\n                var lineDataArray = lineData.split(/[ ]+/);\r\n                var spriteId = lineDataArray[0];\r\n                var stretch = lineDataArray[1];\r\n                if(!(spriteId in this.jsonObject.spriteAttributes)) {\r\n                    this.jsonObject.spriteAttributes[spriteId] = {};\r\n                }\r\n                this.jsonObject.spriteAttributes[spriteId].stretchY = parseInt(stretch);\r\n                break;\r\n            case 'STRETCHXEFFECT':\r\n                var lineDataArray = lineData.split(/[ ]+/);\r\n                var spriteId = lineDataArray[0];\r\n                var stretch = lineDataArray[1];\r\n                if(!(spriteId in this.jsonObject.spriteAttributes)) {\r\n                    this.jsonObject.spriteAttributes[spriteId] = {};\r\n                }\r\n                this.jsonObject.spriteAttributes[spriteId].stretchX = parseInt(stretch);\r\n                break;  \r\n            case \"ROTATEEFFECT\":\r\n                var lineDataArray = lineData.split(/[ ]+/);\r\n                var spriteId = lineDataArray[0];\r\n                var rotation = lineDataArray[1];\r\n                if(!(spriteId in this.jsonObject.spriteAttributes)) {\r\n                    this.jsonObject.spriteAttributes[spriteId] = {};\r\n                }\r\n                this.jsonObject.spriteAttributes[spriteId].rotation = parseInt(rotation);\r\n                break;\r\n            case \"LOOP\":\r\n                this.jsonObject.animationAttributes.loop = true;\r\n                break;\r\n            case \"CONTINUOUS\":\r\n                this.jsonObject.animationAttributes.continuous = true;\r\n                break;\r\n            case \"SINGLEDIRECTION\":\r\n                this.singleDirection = true;\r\n                break;\r\n            case \"ANI\":\r\n                this.inAnimation = true;\r\n                break;\r\n            case \"ANIEND\":\r\n                this.finishedAnimation = true;\r\n                this.inAnimation = false;\r\n                break;\r\n            default:\r\n                if(this.inAnimation && !this.finishedAnimation) {\r\n                    this.compileIntoAnimation(line);\r\n                    //jsonObject.animations[animation.id] = sprite;\r\n                };\r\n        }\r\n    }\r\n\r\n    parseGaniFile(fileContents: string) {\r\n        const lines = fileContents.split('\\n');\r\n        for(let i = 0; i < lines.length; i++) {\r\n            this.parseLine(lines[i]);\r\n        }\r\n        if(this.singleDirection) {\r\n            this.parseSingleDirectionAnimationFrames();\r\n        } else {\r\n            this.parseAnimationFrames();\r\n        }\r\n        return this.jsonObject;\r\n    }\r\n\r\n    async parse() : Promise<GaniJsonData> {\r\n        if(!this.filePath) throw new Error(`No file path to read from..`);\r\n        this.lineReader = readline.createInterface({\r\n            input: fs.createReadStream(this.filePath)\r\n        });\r\n        let lines = 0;\r\n        this.lineReader.on('line', (line) => {\r\n           this.parseLine(line);\r\n           lines++;\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            this.lineReader.on('close',() => {\r\n                if(this.singleDirection) {\r\n                    this.parseSingleDirectionAnimationFrames();\r\n                } else {\r\n                    this.parseAnimationFrames();\r\n                }\r\n                return resolve(this.jsonObject);\r\n            });\r\n        });\r\n    }\r\n    \r\n    private saveParsed() {\r\n        if(this.toFolderPath === null) throw new Error(`Must specify folder path to save to as third param in contructor if you want to save.`);\r\n        var json = JSON.stringify(this.jsonObject, null, 2);\r\n        var jsonsmall = JSON.stringify(this.jsonObject);\r\n        fs.writeFileSync(path.join(this.toFolderPath, 'min_'+ this.fileName+'.json'), jsonsmall, 'utf8');\r\n        fs.writeFileSync(path.join(this.toFolderPath, this.fileName+'.json'), json, 'utf8');\r\n    }\r\n\r\n    async parseAndSave() : Promise<GaniJsonData> {\r\n        const d = await this.parse();\r\n        assert(d === this.jsonObject);\r\n        this.saveParsed();\r\n        return d;\r\n    }\r\n\r\n    parseAnimationFrames(){\r\n        const animationFrames = this.animationFrames;\r\n        for(let i = 0; i < animationFrames.length; i++){\r\n            const animationFrameJson : GaniAnimationFrame = {};\r\n            if(!animationFrames[i]?.length) {\r\n                continue;\r\n            }\r\n            for(let j = 0; j < animationFrames[i].length; j++){\r\n\r\n                //@ts-ignore\r\n                const frameType = animationFrames[i][j].replace(/ .*/,'').trim();\r\n    \r\n                // if its in the first 4 that means its a frame for a direction\r\n                if(j <= 3) {\r\n                    // split each sprite by commans to put into array\r\n                    //@ts-ignore\r\n                    const tempArray = animationFrames[i][j].trim().split(',');\r\n                    for(let k = 0; k < tempArray.length; k++) {\r\n                        // then split each sprite code and x y +- by commas to keep into array\r\n                        tempArray[k] = tempArray[k].trim().split(/[ ]+/);\r\n                        for (let l = 0; l < tempArray[k].length; l++) {\r\n                            // finally we want these values to integers so parse.\r\n                            tempArray[k][l] = parseFloat(tempArray[k][l])\r\n                        }\r\n                    }\r\n                    animationFrameJson[INDEX_TO_DIRECTION_MAP[j]] = tempArray\r\n                }\r\n                if(frameType == \"PLAYSOUND\") {\r\n                    this.parsePlaySoundLine(animationFrames[i][j], animationFrameJson);\r\n                } else if (frameType === \"WAIT\") {\r\n                    this.parseWaitLine(animationFrames[i][j], animationFrameJson);\r\n                }\r\n            }\r\n            // after looping through the whole frame we can push it to the animation frame array of the json\r\n            this.jsonObject.animationFrames.push(animationFrameJson)\r\n\r\n        }\r\n    }\r\n    private parseWaitLine(line: string | number, animationFrameJson: GaniAnimationFrame) {\r\n        const [_, rowValue] = `${line}`.trim().split(' ');\r\n        animationFrameJson.wait = parseFloat(rowValue);\r\n    }\r\n\r\n    private parsePlaySoundLine(line: string | number, animationFrameJson: GaniAnimationFrame) {\r\n        const [_, ...rowValues] = `${line}`.trim().split(' ');\r\n        if(!animationFrameJson.sounds) {\r\n            animationFrameJson.sounds = [];\r\n        }\r\n        animationFrameJson.sounds.push({\r\n            name: rowValues[0],\r\n            time: parseFloat(rowValues[1]),\r\n            volume: parseFloat(rowValues[2]),\r\n        });\r\n    }\r\n\r\n    parseSingleDirectionAnimationFrames(){\r\n        const animationFrames = this.animationFrames as any;\r\n        for(var i = 0; i < animationFrames.length; i++){\r\n            const animationFrameJson : GaniAnimationFrame = {};\r\n            for(let j = 0; j < animationFrames[i].length; j++){\r\n                const frameType = animationFrames[i][j].replace(/ .*/,'');\r\n\r\n                switch(frameType){\r\n                    case \"PLAYSOUND\": \r\n                        this.parsePlaySoundLine(animationFrames[i][j], animationFrameJson);\r\n                        break;\r\n                    case \"WAIT\":\r\n                        this.parseWaitLine(animationFrames[i][j], animationFrameJson);\r\n                        break;\r\n                    case \"\":\r\n                        const tempArray = animationFrames[i][j].trim().split(',');\r\n                        for(let k = 0; k < tempArray.length; k++) {\r\n                            // then split each sprite code and x y +- by commas to keep into array\r\n                            tempArray[k] = tempArray[k].trim().split(/[ ]+/);\r\n                            for (let l = 0; l < tempArray[k].length; l++) {\r\n                                // finally we want these values to integers so parse.\r\n                                tempArray[k][l] = parseInt(tempArray[k][l])\r\n                            }\r\n                        }\r\n                        animationFrameJson[\"frame\"] = tempArray;\r\n                        break;\r\n                    default:\r\n                        console.log('unhandled frameType:', frameType)\r\n\r\n                }\r\n            }\r\n            // after looping through the whole frame we can push it to the animation frame array of the json\r\n            this.jsonObject.animationFrames.push(animationFrameJson)\r\n        }\r\n    }\r\n\r\n    compileIntoAnimation(line){\r\n        // checks to see if theres an enter which indicates new frame\r\n        if(/^\\s*$/.test(line)){\r\n            this.animationIndex++;\r\n            this.animationFrames[this.animationIndex] = [];\r\n        } else {\r\n            this.animationFrames[this.animationIndex].push(line);\r\n        }\r\n    }\r\n\r\n    getSpriteJsonFromLine(line) : { id: string, array: GaniSpriteData } {\r\n        let items = line.split(/[ ]+/);\r\n        // each line should have 8 items, if there's more after 8 that means its because\r\n        // the last item has spaces in it and we need to concat it and make sure the length stays 8\r\n        if(items.length > 8){\r\n            const spriteName = [];\r\n            //iterate through the left\r\n            for(var i = 7; i < items.length; i++){\r\n                spriteName.push(items[i])\r\n            }\r\n            items[7] = spriteName.join(\" \");\r\n            items = items.slice(0, 8);\r\n        }\r\n        const imageName = items[2];\r\n\r\n        // get the current image index\r\n        let imageIndex = this.jsonObject.images.indexOf(imageName);\r\n        // if the image index is not greater than -1 it's not in the image array yet.\r\n        // push it and get the index length - 1\r\n        if(!(imageIndex > -1)) {\r\n            this.jsonObject.images.push(imageName);\r\n            imageIndex = this.jsonObject.images.length - 1;\r\n        }\r\n        return {\r\n            id: items[1],\r\n            array: [\r\n                imageIndex,\r\n                items[3],\r\n                items[4],\r\n                items[5],\r\n                items[6],\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport async function parseAndSaveGaniFile(ganiFolderPath: string, ganiName: string, parsedFolderPath: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson(ganiFolderPath,ganiName,parsedFolderPath);\r\n    return f.parseAndSave();\r\n};\r\n\r\n\r\nexport async function parseGaniFile(ganiFileContent: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson();\r\n    return f.parseGaniFile(ganiFileContent)\r\n};\r\n\r\nexport async function parse(ganiFolderPath: string, ganiName: string, toDirectoryPath?: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson(ganiFolderPath, ganiName, toDirectoryPath);\r\n    return toDirectoryPath ? f.parseAndSave() : f.parse();\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"0a4247ef6d79147de689279ea4e392a7f6e18445","contentHash":"4f7e4ee39ae6a90959bedf937de461beaa2a81ed9922a68db98bb20dc21b6d1c"}}