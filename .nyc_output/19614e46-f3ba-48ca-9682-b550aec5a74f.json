{"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\index.ts":{"path":"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":127}},"4":{"start":{"line":5,"column":87},"end":{"line":5,"column":121}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":141}},"6":{"start":{"line":6,"column":94},"end":{"line":6,"column":135}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":73},"end":{"line":5,"column":74}},"loc":{"start":{"line":5,"column":85},"end":{"line":5,"column":123}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":80},"end":{"line":6,"column":81}},"loc":{"start":{"line":6,"column":92},"end":{"line":6,"column":137}},"line":6}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0},"f":{"0":1,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"C:/Users/joevi/source/repos/Gani2Json/src/index.ts","sources":["C:/Users/joevi/source/repos/Gani2Json/src/index.ts"],"names":[],"mappings":";;;AAAA,2CAAmE;AAA1D,2GAAA,aAAa,OAAA;AAAE,kHAAA,oBAAoB,OAAA","sourcesContent":["export { parseGaniFile, parseAndSaveGaniFile } from './GaniToJson';"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7765aef78cb8f8d2d085a9b357d718a6dc26acb9","contentHash":"7e3def15d1ddce50e57831d6c1d05bb13b03e6e32557695a2f446c02e07d0cfe"},"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\GaniToJson.ts":{"path":"C:\\Users\\joevi\\source\\repos\\Gani2Json\\src\\GaniToJson.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"1":{"start":{"line":3,"column":28},"end":{"line":3,"column":110}},"2":{"start":{"line":3,"column":91},"end":{"line":3,"column":106}},"3":{"start":{"line":4,"column":4},"end":{"line":9,"column":7}},"4":{"start":{"line":5,"column":36},"end":{"line":5,"column":97}},"5":{"start":{"line":5,"column":42},"end":{"line":5,"column":70}},"6":{"start":{"line":5,"column":85},"end":{"line":5,"column":95}},"7":{"start":{"line":6,"column":35},"end":{"line":6,"column":100}},"8":{"start":{"line":6,"column":41},"end":{"line":6,"column":73}},"9":{"start":{"line":6,"column":88},"end":{"line":6,"column":98}},"10":{"start":{"line":7,"column":32},"end":{"line":7,"column":116}},"11":{"start":{"line":8,"column":8},"end":{"line":8,"column":78}},"12":{"start":{"line":11,"column":0},"end":{"line":11,"column":62}},"13":{"start":{"line":12,"column":0},"end":{"line":12,"column":62}},"14":{"start":{"line":13,"column":18},"end":{"line":13,"column":36}},"15":{"start":{"line":14,"column":11},"end":{"line":14,"column":26}},"16":{"start":{"line":15,"column":15},"end":{"line":15,"column":34}},"17":{"start":{"line":16,"column":9},"end":{"line":16,"column":22}},"18":{"start":{"line":17,"column":31},"end":{"line":22,"column":1}},"19":{"start":{"line":23,"column":25},"end":{"line":29,"column":1}},"20":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"21":{"start":{"line":33,"column":8},"end":{"line":33,"column":37}},"22":{"start":{"line":34,"column":8},"end":{"line":34,"column":33}},"23":{"start":{"line":35,"column":8},"end":{"line":35,"column":39}},"24":{"start":{"line":36,"column":8},"end":{"line":36,"column":37}},"25":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"26":{"start":{"line":38,"column":12},"end":{"line":38,"column":59}},"27":{"start":{"line":41,"column":12},"end":{"line":41,"column":37}},"28":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"29":{"start":{"line":44,"column":12},"end":{"line":44,"column":57}},"30":{"start":{"line":46,"column":8},"end":{"line":46,"column":33}},"31":{"start":{"line":47,"column":8},"end":{"line":47,"column":74}},"32":{"start":{"line":48,"column":8},"end":{"line":55,"column":10}},"33":{"start":{"line":56,"column":8},"end":{"line":56,"column":34}},"34":{"start":{"line":57,"column":8},"end":{"line":57,"column":55}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":37}},"36":{"start":{"line":59,"column":8},"end":{"line":59,"column":33}},"37":{"start":{"line":60,"column":8},"end":{"line":60,"column":39}},"38":{"start":{"line":61,"column":8},"end":{"line":61,"column":61}},"39":{"start":{"line":62,"column":8},"end":{"line":64,"column":11}},"40":{"start":{"line":67,"column":8},"end":{"line":125,"column":11}},"41":{"start":{"line":68,"column":12},"end":{"line":112,"column":15}},"42":{"start":{"line":69,"column":31},"end":{"line":69,"column":54}},"43":{"start":{"line":71,"column":31},"end":{"line":71,"column":92}},"44":{"start":{"line":72,"column":16},"end":{"line":111,"column":17}},"45":{"start":{"line":74,"column":37},"end":{"line":74,"column":69}},"46":{"start":{"line":75,"column":24},"end":{"line":75,"column":74}},"47":{"start":{"line":76,"column":24},"end":{"line":76,"column":30}},"48":{"start":{"line":78,"column":24},"end":{"line":78,"column":81}},"49":{"start":{"line":79,"column":24},"end":{"line":79,"column":30}},"50":{"start":{"line":81,"column":44},"end":{"line":81,"column":66}},"51":{"start":{"line":82,"column":39},"end":{"line":82,"column":55}},"52":{"start":{"line":83,"column":39},"end":{"line":83,"column":55}},"53":{"start":{"line":84,"column":24},"end":{"line":86,"column":25}},"54":{"start":{"line":85,"column":28},"end":{"line":85,"column":76}},"55":{"start":{"line":87,"column":24},"end":{"line":87,"column":87}},"56":{"start":{"line":88,"column":24},"end":{"line":88,"column":30}},"57":{"start":{"line":90,"column":24},"end":{"line":90,"column":72}},"58":{"start":{"line":91,"column":24},"end":{"line":91,"column":30}},"59":{"start":{"line":93,"column":24},"end":{"line":93,"column":78}},"60":{"start":{"line":94,"column":24},"end":{"line":94,"column":30}},"61":{"start":{"line":96,"column":24},"end":{"line":96,"column":52}},"62":{"start":{"line":97,"column":24},"end":{"line":97,"column":30}},"63":{"start":{"line":99,"column":24},"end":{"line":99,"column":48}},"64":{"start":{"line":100,"column":24},"end":{"line":100,"column":30}},"65":{"start":{"line":102,"column":24},"end":{"line":102,"column":54}},"66":{"start":{"line":103,"column":24},"end":{"line":103,"column":49}},"67":{"start":{"line":104,"column":24},"end":{"line":104,"column":30}},"68":{"start":{"line":106,"column":24},"end":{"line":109,"column":25}},"69":{"start":{"line":107,"column":28},"end":{"line":107,"column":60}},"70":{"start":{"line":113,"column":12},"end":{"line":124,"column":15}},"71":{"start":{"line":114,"column":16},"end":{"line":123,"column":19}},"72":{"start":{"line":116,"column":20},"end":{"line":121,"column":21}},"73":{"start":{"line":117,"column":24},"end":{"line":117,"column":67}},"74":{"start":{"line":120,"column":24},"end":{"line":120,"column":52}},"75":{"start":{"line":122,"column":20},"end":{"line":122,"column":52}},"76":{"start":{"line":128,"column":8},"end":{"line":129,"column":117}},"77":{"start":{"line":129,"column":12},"end":{"line":129,"column":117}},"78":{"start":{"line":130,"column":19},"end":{"line":130,"column":59}},"79":{"start":{"line":131,"column":24},"end":{"line":131,"column":55}},"80":{"start":{"line":132,"column":8},"end":{"line":132,"column":108}},"81":{"start":{"line":133,"column":8},"end":{"line":133,"column":94}},"82":{"start":{"line":136,"column":8},"end":{"line":141,"column":11}},"83":{"start":{"line":137,"column":22},"end":{"line":137,"column":40}},"84":{"start":{"line":138,"column":12},"end":{"line":138,"column":57}},"85":{"start":{"line":139,"column":12},"end":{"line":139,"column":30}},"86":{"start":{"line":140,"column":12},"end":{"line":140,"column":21}},"87":{"start":{"line":145,"column":30},"end":{"line":145,"column":50}},"88":{"start":{"line":146,"column":8},"end":{"line":178,"column":9}},"89":{"start":{"line":146,"column":21},"end":{"line":146,"column":22}},"90":{"start":{"line":147,"column":37},"end":{"line":147,"column":39}},"91":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"92":{"start":{"line":149,"column":16},"end":{"line":149,"column":25}},"93":{"start":{"line":151,"column":12},"end":{"line":175,"column":13}},"94":{"start":{"line":151,"column":25},"end":{"line":151,"column":26}},"95":{"start":{"line":153,"column":32},"end":{"line":153,"column":72}},"96":{"start":{"line":155,"column":16},"end":{"line":168,"column":17}},"97":{"start":{"line":158,"column":36},"end":{"line":158,"column":75}},"98":{"start":{"line":159,"column":20},"end":{"line":166,"column":21}},"99":{"start":{"line":159,"column":33},"end":{"line":159,"column":34}},"100":{"start":{"line":161,"column":24},"end":{"line":161,"column":73}},"101":{"start":{"line":162,"column":24},"end":{"line":165,"column":25}},"102":{"start":{"line":162,"column":37},"end":{"line":162,"column":38}},"103":{"start":{"line":164,"column":28},"end":{"line":164,"column":74}},"104":{"start":{"line":167,"column":20},"end":{"line":167,"column":78}},"105":{"start":{"line":169,"column":16},"end":{"line":174,"column":17}},"106":{"start":{"line":170,"column":20},"end":{"line":170,"column":87}},"107":{"start":{"line":172,"column":21},"end":{"line":174,"column":17}},"108":{"start":{"line":173,"column":20},"end":{"line":173,"column":82}},"109":{"start":{"line":177,"column":12},"end":{"line":177,"column":69}},"110":{"start":{"line":181,"column":30},"end":{"line":181,"column":57}},"111":{"start":{"line":182,"column":8},"end":{"line":182,"column":55}},"112":{"start":{"line":185,"column":34},"end":{"line":185,"column":61}},"113":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"114":{"start":{"line":187,"column":12},"end":{"line":187,"column":43}},"115":{"start":{"line":189,"column":8},"end":{"line":193,"column":11}},"116":{"start":{"line":196,"column":32},"end":{"line":196,"column":52}},"117":{"start":{"line":197,"column":8},"end":{"line":226,"column":9}},"118":{"start":{"line":197,"column":21},"end":{"line":197,"column":22}},"119":{"start":{"line":198,"column":37},"end":{"line":198,"column":39}},"120":{"start":{"line":199,"column":12},"end":{"line":223,"column":13}},"121":{"start":{"line":199,"column":25},"end":{"line":199,"column":26}},"122":{"start":{"line":200,"column":32},"end":{"line":200,"column":72}},"123":{"start":{"line":201,"column":16},"end":{"line":222,"column":17}},"124":{"start":{"line":203,"column":24},"end":{"line":203,"column":91}},"125":{"start":{"line":204,"column":24},"end":{"line":204,"column":30}},"126":{"start":{"line":206,"column":24},"end":{"line":206,"column":86}},"127":{"start":{"line":207,"column":24},"end":{"line":207,"column":30}},"128":{"start":{"line":209,"column":40},"end":{"line":209,"column":79}},"129":{"start":{"line":210,"column":24},"end":{"line":217,"column":25}},"130":{"start":{"line":210,"column":37},"end":{"line":210,"column":38}},"131":{"start":{"line":212,"column":28},"end":{"line":212,"column":77}},"132":{"start":{"line":213,"column":28},"end":{"line":216,"column":29}},"133":{"start":{"line":213,"column":41},"end":{"line":213,"column":42}},"134":{"start":{"line":215,"column":32},"end":{"line":215,"column":76}},"135":{"start":{"line":218,"column":24},"end":{"line":218,"column":64}},"136":{"start":{"line":219,"column":24},"end":{"line":219,"column":30}},"137":{"start":{"line":221,"column":24},"end":{"line":221,"column":71}},"138":{"start":{"line":225,"column":12},"end":{"line":225,"column":69}},"139":{"start":{"line":230,"column":8},"end":{"line":236,"column":9}},"140":{"start":{"line":231,"column":12},"end":{"line":231,"column":34}},"141":{"start":{"line":232,"column":12},"end":{"line":232,"column":59}},"142":{"start":{"line":235,"column":12},"end":{"line":235,"column":65}},"143":{"start":{"line":239,"column":20},"end":{"line":239,"column":38}},"144":{"start":{"line":242,"column":8},"end":{"line":250,"column":9}},"145":{"start":{"line":243,"column":29},"end":{"line":243,"column":31}},"146":{"start":{"line":245,"column":12},"end":{"line":247,"column":13}},"147":{"start":{"line":245,"column":25},"end":{"line":245,"column":26}},"148":{"start":{"line":246,"column":16},"end":{"line":246,"column":42}},"149":{"start":{"line":248,"column":12},"end":{"line":248,"column":44}},"150":{"start":{"line":249,"column":12},"end":{"line":249,"column":38}},"151":{"start":{"line":251,"column":24},"end":{"line":251,"column":32}},"152":{"start":{"line":253,"column":25},"end":{"line":253,"column":66}},"153":{"start":{"line":256,"column":8},"end":{"line":259,"column":9}},"154":{"start":{"line":257,"column":12},"end":{"line":257,"column":51}},"155":{"start":{"line":258,"column":12},"end":{"line":258,"column":59}},"156":{"start":{"line":260,"column":8},"end":{"line":269,"column":10}},"157":{"start":{"line":273,"column":4},"end":{"line":276,"column":7}},"158":{"start":{"line":274,"column":18},"end":{"line":274,"column":76}},"159":{"start":{"line":275,"column":8},"end":{"line":275,"column":32}},"160":{"start":{"line":278,"column":0},"end":{"line":278,"column":52}},"161":{"start":{"line":281,"column":4},"end":{"line":284,"column":7}},"162":{"start":{"line":282,"column":18},"end":{"line":282,"column":75}},"163":{"start":{"line":283,"column":8},"end":{"line":283,"column":62}},"164":{"start":{"line":286,"column":0},"end":{"line":286,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":10,"column":1}},"line":2},"1":{"name":"adopt","decl":{"start":{"line":3,"column":13},"end":{"line":3,"column":18}},"loc":{"start":{"line":3,"column":26},"end":{"line":3,"column":112}},"line":3},"2":{"name":"(anonymous_2)","decl":{"start":{"line":3,"column":70},"end":{"line":3,"column":71}},"loc":{"start":{"line":3,"column":89},"end":{"line":3,"column":108}},"line":3},"3":{"name":"(anonymous_3)","decl":{"start":{"line":4,"column":36},"end":{"line":4,"column":37}},"loc":{"start":{"line":4,"column":63},"end":{"line":9,"column":5}},"line":4},"4":{"name":"fulfilled","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":34},"end":{"line":5,"column":99}},"line":5},"5":{"name":"rejected","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":25}},"loc":{"start":{"line":6,"column":33},"end":{"line":6,"column":102}},"line":6},"6":{"name":"step","decl":{"start":{"line":7,"column":17},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":118}},"line":7},"7":{"name":"(anonymous_7)","decl":{"start":{"line":31,"column":4},"end":{"line":31,"column":5}},"loc":{"start":{"line":31,"column":52},"end":{"line":65,"column":5}},"line":31},"8":{"name":"(anonymous_8)","decl":{"start":{"line":66,"column":4},"end":{"line":66,"column":5}},"loc":{"start":{"line":66,"column":12},"end":{"line":126,"column":5}},"line":66},"9":{"name":"(anonymous_9)","decl":{"start":{"line":67,"column":47},"end":{"line":67,"column":48}},"loc":{"start":{"line":67,"column":60},"end":{"line":125,"column":9}},"line":67},"10":{"name":"(anonymous_10)","decl":{"start":{"line":68,"column":39},"end":{"line":68,"column":40}},"loc":{"start":{"line":68,"column":49},"end":{"line":112,"column":13}},"line":68},"11":{"name":"(anonymous_11)","decl":{"start":{"line":113,"column":31},"end":{"line":113,"column":32}},"loc":{"start":{"line":113,"column":52},"end":{"line":124,"column":13}},"line":113},"12":{"name":"(anonymous_12)","decl":{"start":{"line":114,"column":44},"end":{"line":114,"column":45}},"loc":{"start":{"line":114,"column":50},"end":{"line":123,"column":17}},"line":114},"13":{"name":"(anonymous_13)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":17},"end":{"line":134,"column":5}},"line":127},"14":{"name":"(anonymous_14)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":19},"end":{"line":142,"column":5}},"line":135},"15":{"name":"(anonymous_15)","decl":{"start":{"line":136,"column":47},"end":{"line":136,"column":48}},"loc":{"start":{"line":136,"column":60},"end":{"line":141,"column":9}},"line":136},"16":{"name":"(anonymous_16)","decl":{"start":{"line":143,"column":4},"end":{"line":143,"column":5}},"loc":{"start":{"line":143,"column":27},"end":{"line":179,"column":5}},"line":143},"17":{"name":"(anonymous_17)","decl":{"start":{"line":180,"column":4},"end":{"line":180,"column":5}},"loc":{"start":{"line":180,"column":44},"end":{"line":183,"column":5}},"line":180},"18":{"name":"(anonymous_18)","decl":{"start":{"line":184,"column":4},"end":{"line":184,"column":5}},"loc":{"start":{"line":184,"column":49},"end":{"line":194,"column":5}},"line":184},"19":{"name":"(anonymous_19)","decl":{"start":{"line":195,"column":4},"end":{"line":195,"column":5}},"loc":{"start":{"line":195,"column":42},"end":{"line":227,"column":5}},"line":195},"20":{"name":"(anonymous_20)","decl":{"start":{"line":228,"column":4},"end":{"line":228,"column":5}},"loc":{"start":{"line":228,"column":31},"end":{"line":237,"column":5}},"line":228},"21":{"name":"(anonymous_21)","decl":{"start":{"line":238,"column":4},"end":{"line":238,"column":5}},"loc":{"start":{"line":238,"column":32},"end":{"line":270,"column":5}},"line":238},"22":{"name":"parseAndSaveGaniFile","decl":{"start":{"line":272,"column":9},"end":{"line":272,"column":29}},"loc":{"start":{"line":272,"column":74},"end":{"line":277,"column":1}},"line":272},"23":{"name":"(anonymous_23)","decl":{"start":{"line":273,"column":43},"end":{"line":273,"column":44}},"loc":{"start":{"line":273,"column":56},"end":{"line":276,"column":5}},"line":273},"24":{"name":"parseGaniFile","decl":{"start":{"line":280,"column":9},"end":{"line":280,"column":22}},"loc":{"start":{"line":280,"column":66},"end":{"line":285,"column":1}},"line":280},"25":{"name":"(anonymous_25)","decl":{"start":{"line":281,"column":43},"end":{"line":281,"column":44}},"loc":{"start":{"line":281,"column":56},"end":{"line":284,"column":5}},"line":281}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":10,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":10,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":35},"end":{"line":3,"column":109}},"type":"cond-expr","locations":[{"start":{"line":3,"column":56},"end":{"line":3,"column":61}},{"start":{"line":3,"column":64},"end":{"line":3,"column":109}}],"line":3},"2":{"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"type":"binary-expr","locations":[{"start":{"line":4,"column":16},"end":{"line":4,"column":17}},{"start":{"line":4,"column":22},"end":{"line":4,"column":33}}],"line":4},"3":{"loc":{"start":{"line":7,"column":32},"end":{"line":7,"column":115}},"type":"cond-expr","locations":[{"start":{"line":7,"column":46},"end":{"line":7,"column":67}},{"start":{"line":7,"column":70},"end":{"line":7,"column":115}}],"line":7},"4":{"loc":{"start":{"line":8,"column":51},"end":{"line":8,"column":67}},"type":"binary-expr","locations":[{"start":{"line":8,"column":51},"end":{"line":8,"column":61}},{"start":{"line":8,"column":65},"end":{"line":8,"column":67}}],"line":8},"5":{"loc":{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":42,"column":9}},{"start":{"line":37,"column":8},"end":{"line":42,"column":9}}],"line":37},"6":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"7":{"loc":{"start":{"line":72,"column":16},"end":{"line":111,"column":17}},"type":"switch","locations":[{"start":{"line":73,"column":20},"end":{"line":76,"column":30}},{"start":{"line":77,"column":20},"end":{"line":79,"column":30}},{"start":{"line":80,"column":20},"end":{"line":88,"column":30}},{"start":{"line":89,"column":20},"end":{"line":91,"column":30}},{"start":{"line":92,"column":20},"end":{"line":94,"column":30}},{"start":{"line":95,"column":20},"end":{"line":97,"column":30}},{"start":{"line":98,"column":20},"end":{"line":100,"column":30}},{"start":{"line":101,"column":20},"end":{"line":104,"column":30}},{"start":{"line":105,"column":20},"end":{"line":110,"column":25}}],"line":72},"8":{"loc":{"start":{"line":84,"column":24},"end":{"line":86,"column":25}},"type":"if","locations":[{"start":{"line":84,"column":24},"end":{"line":86,"column":25}},{"start":{"line":84,"column":24},"end":{"line":86,"column":25}}],"line":84},"9":{"loc":{"start":{"line":106,"column":24},"end":{"line":109,"column":25}},"type":"if","locations":[{"start":{"line":106,"column":24},"end":{"line":109,"column":25}},{"start":{"line":106,"column":24},"end":{"line":109,"column":25}}],"line":106},"10":{"loc":{"start":{"line":106,"column":28},"end":{"line":106,"column":71}},"type":"binary-expr","locations":[{"start":{"line":106,"column":28},"end":{"line":106,"column":44}},{"start":{"line":106,"column":48},"end":{"line":106,"column":71}}],"line":106},"11":{"loc":{"start":{"line":116,"column":20},"end":{"line":121,"column":21}},"type":"if","locations":[{"start":{"line":116,"column":20},"end":{"line":121,"column":21}},{"start":{"line":116,"column":20},"end":{"line":121,"column":21}}],"line":116},"12":{"loc":{"start":{"line":128,"column":8},"end":{"line":129,"column":117}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":129,"column":117}},{"start":{"line":128,"column":8},"end":{"line":129,"column":117}}],"line":128},"13":{"loc":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},{"start":{"line":148,"column":12},"end":{"line":150,"column":13}}],"line":148},"14":{"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":90}},"type":"cond-expr","locations":[{"start":{"line":148,"column":72},"end":{"line":148,"column":78}},{"start":{"line":148,"column":81},"end":{"line":148,"column":90}}],"line":148},"15":{"loc":{"start":{"line":148,"column":18},"end":{"line":148,"column":69}},"type":"binary-expr","locations":[{"start":{"line":148,"column":18},"end":{"line":148,"column":52}},{"start":{"line":148,"column":56},"end":{"line":148,"column":69}}],"line":148},"16":{"loc":{"start":{"line":155,"column":16},"end":{"line":168,"column":17}},"type":"if","locations":[{"start":{"line":155,"column":16},"end":{"line":168,"column":17}},{"start":{"line":155,"column":16},"end":{"line":168,"column":17}}],"line":155},"17":{"loc":{"start":{"line":169,"column":16},"end":{"line":174,"column":17}},"type":"if","locations":[{"start":{"line":169,"column":16},"end":{"line":174,"column":17}},{"start":{"line":169,"column":16},"end":{"line":174,"column":17}}],"line":169},"18":{"loc":{"start":{"line":172,"column":21},"end":{"line":174,"column":17}},"type":"if","locations":[{"start":{"line":172,"column":21},"end":{"line":174,"column":17}},{"start":{"line":172,"column":21},"end":{"line":174,"column":17}}],"line":172},"19":{"loc":{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},"type":"if","locations":[{"start":{"line":186,"column":8},"end":{"line":188,"column":9}},{"start":{"line":186,"column":8},"end":{"line":188,"column":9}}],"line":186},"20":{"loc":{"start":{"line":201,"column":16},"end":{"line":222,"column":17}},"type":"switch","locations":[{"start":{"line":202,"column":20},"end":{"line":204,"column":30}},{"start":{"line":205,"column":20},"end":{"line":207,"column":30}},{"start":{"line":208,"column":20},"end":{"line":219,"column":30}},{"start":{"line":220,"column":20},"end":{"line":221,"column":71}}],"line":201},"21":{"loc":{"start":{"line":230,"column":8},"end":{"line":236,"column":9}},"type":"if","locations":[{"start":{"line":230,"column":8},"end":{"line":236,"column":9}},{"start":{"line":230,"column":8},"end":{"line":236,"column":9}}],"line":230},"22":{"loc":{"start":{"line":242,"column":8},"end":{"line":250,"column":9}},"type":"if","locations":[{"start":{"line":242,"column":8},"end":{"line":250,"column":9}},{"start":{"line":242,"column":8},"end":{"line":250,"column":9}}],"line":242},"23":{"loc":{"start":{"line":256,"column":8},"end":{"line":259,"column":9}},"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":259,"column":9}},{"start":{"line":256,"column":8},"end":{"line":259,"column":9}}],"line":256},"24":{"loc":{"start":{"line":283,"column":15},"end":{"line":283,"column":61}},"type":"cond-expr","locations":[{"start":{"line":283,"column":33},"end":{"line":283,"column":49}},{"start":{"line":283,"column":52},"end":{"line":283,"column":61}}],"line":283}},"s":{"0":1,"1":1,"2":0,"3":3,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":4,"11":3,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":0,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":168,"43":168,"44":168,"45":117,"46":117,"47":117,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":1,"58":1,"59":1,"60":1,"61":0,"62":0,"63":1,"64":1,"65":1,"66":1,"67":1,"68":47,"69":42,"70":1,"71":1,"72":1,"73":0,"74":1,"75":1,"76":1,"77":0,"78":1,"79":1,"80":1,"81":1,"82":1,"83":1,"84":1,"85":1,"86":1,"87":1,"88":1,"89":1,"90":9,"91":9,"92":1,"93":8,"94":8,"95":34,"96":34,"97":32,"98":32,"99":32,"100":160,"101":160,"102":160,"103":480,"104":32,"105":34,"106":2,"107":32,"108":0,"109":8,"110":0,"111":0,"112":2,"113":2,"114":2,"115":2,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":42,"140":8,"141":8,"142":34,"143":117,"144":117,"145":113,"146":113,"147":113,"148":320,"149":113,"150":113,"151":117,"152":117,"153":117,"154":5,"155":5,"156":117,"157":0,"158":0,"159":0,"160":1,"161":1,"162":1,"163":1,"164":1},"f":{"0":3,"1":1,"2":0,"3":3,"4":1,"5":0,"6":4,"7":1,"8":1,"9":1,"10":168,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":2,"19":0,"20":42,"21":117,"22":0,"23":0,"24":1,"25":1},"b":{"0":[1,1,1],"1":[1,0],"2":[3,3],"3":[3,1],"4":[3,3],"5":[1,0],"6":[1,0],"7":[117,0,0,1,1,0,1,1,47],"8":[0,0],"9":[42,5],"10":[47,42],"11":[0,1],"12":[0,1],"13":[1,8],"14":[0,9],"15":[9,9],"16":[32,2],"17":[2,32],"18":[0,32],"19":[2,0],"20":[0,0,0,0],"21":[8,34],"22":[113,4],"23":[5,112],"24":[1,0]},"inputSourceMap":{"version":3,"file":"C:/Users/joevi/source/repos/Gani2Json/src/GaniToJson.ts","sources":["C:/Users/joevi/source/repos/Gani2Json/src/GaniToJson.ts"],"names":[],"mappings":"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","sourcesContent":["import { assert } from \"console\";\r\n\r\nvar path = require('path');\r\nvar readline = require(\"readline\");\r\nvar fs = require(\"fs\");\r\n\r\nconst INDEX_TO_DIRECTION_MAP = {\r\n    0: \"up\",\r\n    1: \"left\",\r\n    2: \"down\",\r\n    3: \"right\"\r\n}\r\n\r\nconst SPRITE_INDEX_MAP = {\r\n    imageIndex: 0,\r\n    x: 1,\r\n    y: 2,\r\n    w: 3,\r\n    h: 4\r\n}\r\n\r\n\r\ntype SpriteImageLookup = {\r\n    imageIndex: number,\r\n    x: number,\r\n    y: number,\r\n    w: number,\r\n    h: number,\r\n}\r\n\r\ntype GaniAnimationAttributes = {\r\n    continuous?: boolean,\r\n    loop?: boolean,\r\n    setBackTo?: string,\r\n};\r\ntype GaniSpriteAttributes = {\r\n    rotation?: number,\r\n};\r\ntype GaniSpriteData =  Array<number | string>;\r\ntype GaniAnimationFrame = {\r\n    up?: Array<number>,\r\n    down?:  Array<number>,\r\n    left?: Array<number>,\r\n    right?: Array<number>,\r\n    frame?: Array<number>,\r\n    sounds?: Array<{\r\n        name: string,\r\n        time?: number,\r\n        volume?: number\r\n    }>,\r\n    wait?: number,\r\n };\r\ntype GaniImage = any;\r\n\r\nexport type GaniJsonData = {\r\n    images: Array<GaniImage>,\r\n    animationAttributes: GaniAnimationAttributes,\r\n    spriteAttributes:  {[spriteId: string]: GaniSpriteAttributes},\r\n    sprites: {[spriteId: string]: GaniSpriteData },\r\n    animationFrames: Array<GaniAnimationFrame>\r\n}\r\n\r\nclass GaniToJson {\r\n    private folderPath : string;\r\n    private toFolderPath : string;\r\n    private fileName : string;\r\n    private filePath : string;\r\n    private animationFrames: Array<Array<string | number>>\r\n    private animationIndex : number = 0;\r\n    private singleDirection : boolean = false;\r\n    private inAnimation : boolean = false;\r\n    private finishedAnimation : boolean = false;\r\n    private lineReader : any;\r\n\r\n    readonly jsonObject : GaniJsonData;\r\n    constructor(folderPath, fileName, toFolderPath?) {\r\n        this.folderPath = folderPath;\r\n        if(toFolderPath) {\r\n            this.toFolderPath = path.resolve(toFolderPath);\r\n        } else {\r\n            this.toFolderPath = null;\r\n        }\r\n        if(fileName.includes('.gani')) {\r\n            fileName = fileName.replace(/\\.[^/.]+$/, \"\");\r\n        }\r\n\r\n        this.fileName = fileName;\r\n        this.filePath = path.resolve(this.folderPath, fileName + \".gani\")\r\n\r\n        this.jsonObject = {\r\n            // use this to keep track of image names so it's not repeating\r\n            images: [],\r\n            animationAttributes: {},\r\n            spriteAttributes: {},\r\n            sprites:{},\r\n            animationFrames:[],\r\n        };\r\n\r\n        this.animationFrames = [];\r\n        this.animationFrames[this.animationIndex] = [];\r\n        this.singleDirection = false;\r\n        this.inAnimation = false;\r\n        this.finishedAnimation = false;\r\n        console.log('creating interface for', this.filePath);\r\n        this.lineReader = readline.createInterface({\r\n            input: fs.createReadStream(this.filePath)\r\n        });\r\n\r\n    }\r\n\r\n    async parse() : Promise<GaniJsonData> {\r\n        this.lineReader.on('line', (line) => {\r\n            var lineType = line.replace(/ .*/,'');\r\n            // get all string after the linetype\r\n            var lineData = (line.slice(line.indexOf(lineType) + lineType.length)).trim();\r\n\r\n            switch(lineType){\r\n                case \"SPRITE\":\r\n                    var sprite = this.getSpriteJsonFromLine(line);\r\n                    this.jsonObject.sprites[sprite.id] = sprite.array;\r\n                    break;\r\n                case \"SETBACKTO\":\r\n                    this.jsonObject.animationAttributes.setBackTo = lineData;\r\n                    break;\r\n                case \"ROTATEEFFECT\":\r\n                    var lineDataArray = lineData.split(/[ ]+/);\r\n                    var spriteId = lineDataArray[0];\r\n                    var rotation = lineDataArray[1];\r\n                    if(!(spriteId in this.jsonObject.spriteAttributes)) {\r\n                        this.jsonObject.spriteAttributes[spriteId] = {};\r\n                    }\r\n                    this.jsonObject.spriteAttributes[spriteId].rotation = rotation;\r\n                    break;\r\n                case \"LOOP\":\r\n                    this.jsonObject.animationAttributes.loop = true;\r\n                    break;\r\n                case \"CONTINUOUS\":\r\n                    this.jsonObject.animationAttributes.continuous = true;\r\n                    break;\r\n                case \"SINGLEDIRECTION\":\r\n                    this.singleDirection = true;\r\n                    break;\r\n                case \"ANI\":\r\n                    this.inAnimation = true;\r\n                    break;\r\n                case \"ANIEND\":\r\n                    this.finishedAnimation = true;\r\n                    this.inAnimation = false;\r\n                    break;\r\n                default:\r\n                    if(this.inAnimation && !this.finishedAnimation) {\r\n                        this.compileIntoAnimation(line);\r\n                        //jsonObject.animations[animation.id] = sprite;\r\n                    };\r\n            }\r\n        });\r\n        return new Promise((resolve, reject) => {\r\n            this.lineReader.on('close',() => {\r\n                // console.log('the final jsonObject was', jsonObject);\r\n                if(this.singleDirection) {\r\n                    this.parseSingleDirectionAnimationFrames();\r\n                } else {\r\n                    this.parseAnimationFrames();\r\n                }\r\n                return resolve(this.jsonObject);\r\n            });\r\n        });\r\n    }\r\n    \r\n    private saveParsed() {\r\n        if(this.toFolderPath === null) throw new Error(`Must specify folder path to save to as third param in contructor if you want to save.`);\r\n        var json = JSON.stringify(this.jsonObject, null, 2);\r\n        var jsonsmall = JSON.stringify(this.jsonObject);\r\n        fs.writeFileSync(path.join(this.toFolderPath, 'min_'+ this.fileName+'.json'), jsonsmall, 'utf8');\r\n        fs.writeFileSync(path.join(this.toFolderPath, this.fileName+'.json'), json, 'utf8');\r\n    }\r\n\r\n    async parseAndSave() : Promise<GaniJsonData> {\r\n        const d = await this.parse();\r\n        assert(d === this.jsonObject);\r\n        this.saveParsed();\r\n        return d;\r\n    }\r\n\r\n    parseAnimationFrames(){\r\n        var animationFrames = this.animationFrames;\r\n        for(var i = 0; i < animationFrames.length; i++){\r\n            var animationFrameJson : GaniAnimationFrame = {};\r\n            if(!animationFrames[i]?.length) {\r\n                continue;\r\n            }\r\n            for(var j = 0; j < animationFrames[i].length; j++){\r\n                //@ts-ignore\r\n                var frameType = animationFrames[i][j].replace(/ .*/,'');\r\n                // if its in the first 4 that means its a frame for a direction\r\n                if(j <= 3) {\r\n                    // split each sprite by commans to put into array\r\n                    //@ts-ignore\r\n                    var tempArray = animationFrames[i][j].trim().split(',');\r\n                    for(var k = 0; k < tempArray.length; k++) {\r\n                        // then split each sprite code and x y +- by commas to keep into array\r\n                        tempArray[k] = tempArray[k].trim().split(/[ ]+/);\r\n                        for (var l = 0; l < tempArray[k].length; l++) {\r\n                            // finally we want these values to integers so parse.\r\n                            tempArray[k][l] = parseFloat(tempArray[k][l])\r\n                        }\r\n                    }\r\n                    animationFrameJson[INDEX_TO_DIRECTION_MAP[j]] = tempArray\r\n                }\r\n                if(frameType == \"PLAYSOUND\") {\r\n                    this.parsePlaySoundLine(animationFrames[i][j], animationFrameJson);\r\n                } else if (frameType === \"WAIT\") {\r\n                    this.parseWaitLine(animationFrames[i][j], animationFrameJson);\r\n                }\r\n            }\r\n            // after looping through the whole frame we can push it to the animation frame array of the json\r\n            this.jsonObject.animationFrames.push(animationFrameJson)\r\n\r\n        }\r\n    }\r\n    private parseWaitLine(line: string | number, animationFrameJson: GaniAnimationFrame) {\r\n        const [_, rowValue] = `${line}`.trim().split(' ');\r\n        animationFrameJson.wait = parseFloat(rowValue);\r\n    }\r\n\r\n    private parsePlaySoundLine(line: string | number, animationFrameJson: GaniAnimationFrame) {\r\n        const [_, ...rowValues] = `${line}`.trim().split(' ');\r\n        if(!animationFrameJson.sounds) {\r\n            animationFrameJson.sounds = [];\r\n        }\r\n        animationFrameJson.sounds.push({\r\n            name: rowValues[0],\r\n            time: parseFloat(rowValues[1]),\r\n            volume: parseFloat(rowValues[2]),\r\n        });\r\n    }\r\n\r\n    parseSingleDirectionAnimationFrames(){\r\n        const animationFrames = this.animationFrames as any;\r\n        for(var i = 0; i < animationFrames.length; i++){\r\n            var animationFrameJson : GaniAnimationFrame = {};\r\n            for(var j = 0; j < animationFrames[i].length; j++){\r\n                var frameType = animationFrames[i][j].replace(/ .*/,'');\r\n\r\n                switch(frameType){\r\n                    case \"PLAYSOUND\": \r\n                        this.parsePlaySoundLine(animationFrames[i][j], animationFrameJson);\r\n                        break;\r\n                    case \"WAIT\":\r\n                        this.parseWaitLine(animationFrames[i][j], animationFrameJson);\r\n                        break;\r\n                    case \"\":\r\n                        var tempArray = animationFrames[i][j].trim().split(',');\r\n                        for(var k = 0; k < tempArray.length; k++) {\r\n                            // then split each sprite code and x y +- by commas to keep into array\r\n                            tempArray[k] = tempArray[k].trim().split(/[ ]+/);\r\n                            for (var l = 0; l < tempArray[k].length; l++) {\r\n                                // finally we want these values to integers so parse.\r\n                                tempArray[k][l] = parseInt(tempArray[k][l])\r\n                            }\r\n                        }\r\n                        animationFrameJson[\"frame\"] = tempArray;\r\n                        break;\r\n                    default:\r\n                        console.log('unhandled frameType:', frameType)\r\n\r\n                }\r\n            }\r\n            // after looping through the whole frame we can push it to the animation frame array of the json\r\n            this.jsonObject.animationFrames.push(animationFrameJson)\r\n        }\r\n    }\r\n\r\n    compileIntoAnimation(line){\r\n        // checks to see if theres an enter which indicates new frame\r\n        if(/^\\s*$/.test(line)){\r\n            this.animationIndex++;\r\n            this.animationFrames[this.animationIndex] = [];\r\n        } else {\r\n            this.animationFrames[this.animationIndex].push(line);\r\n        }\r\n    }\r\n\r\n    getSpriteJsonFromLine(line) : { id: string, array: GaniSpriteData } {\r\n        var items = line.split(/[ ]+/);\r\n        // each line should have 8 items, if there's more after 8 that means its because\r\n        // the last item has spaces in it and we need to concat it and make sure the length stays 8\r\n        if(items.length > 8){\r\n            var spriteName = [];\r\n            //iterate through the left\r\n            for(var i = 7; i < items.length; i++){\r\n                spriteName.push(items[i])\r\n            }\r\n            items[7] = spriteName.join(\" \");\r\n            items = items.slice(0, 8);\r\n        }\r\n        var imageName = items[2];\r\n\r\n        // get the current image index\r\n        var imageIndex = this.jsonObject.images.indexOf(imageName);\r\n        // if the image index is not greater than -1 it's not in the image array yet.\r\n        // push it and get the index length - 1\r\n        if(!(imageIndex > -1)) {\r\n            this.jsonObject.images.push(imageName);\r\n            imageIndex = this.jsonObject.images.length - 1;\r\n        }\r\n        return {\r\n            id: items[1],\r\n            array: [\r\n                imageIndex,\r\n                items[3],\r\n                items[4],\r\n                items[5],\r\n                items[6],\r\n            ]\r\n        }\r\n    }\r\n}\r\n\r\nexport async function parseAndSaveGaniFile(ganiFolderPath: string, ganiName: string, parsedFolderPath: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson(ganiFolderPath,ganiName,parsedFolderPath);\r\n    return f.parseAndSave();\r\n};\r\n\r\n\r\nexport async function parseGaniFile(ganiFolderPath: string, ganiName: string, toDirectoryPath?: string) : Promise<GaniJsonData> {\r\n    const f = new GaniToJson(ganiFolderPath, ganiName, toDirectoryPath);\r\n    return toDirectoryPath ? f.parseAndSave() : f.parse();\r\n};"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"46180f07ac7d645e204a97accc53084f34f393f1","contentHash":"9e1ad566213c22b94edf2e0d854d9891dfd733bec8532b76d522d8fbd05a8579"}}